var searchIndex = JSON.parse('{\
"ad9959":{"doc":"","t":[13,18,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,16,13,18,13,13,13,13,8,13,13,4,18,13,3,13,4,13,13,18,18,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10],"n":["ACR","ALL","Ad9959","Bounds","CFR","CFTW0","CPOW0","CSR","CW1","CW10","CW11","CW12","CW13","CW14","CW15","CW2","CW3","CW4","CW5","CW6","CW7","CW8","CW9","Channel","Check","Error","Error","FDW","FOUR","FR1","FR2","FourBitSerial","Frequency","Interface","Interface","LSRR","Mode","ONE","Pin","ProfileSerializer","RDW","Register","SingleBitThreeWire","SingleBitTwoWire","THREE","TWO","TwoBitSerial","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","complement","configure_mode","contains","difference","empty","eq","eq","extend","finalize","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_amplitude","get_frequency","get_phase","get_reference_clock_frequency","get_reference_clock_multiplier","hash","insert","intersection","intersects","into","into","into","into","into","into","is_all","is_empty","ne","new","new","not","partial_cmp","read","remove","self_test","set","set_amplitude","set_frequency","set_phase","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","update_channels","write"],"q":["ad9959","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A device driver for the AD9959 direct digital synthesis …","","","","","","","","","","","","","","","","","","","","","Specifies an output channel of the AD9959 DDS chip.","","Possible errors generated by the AD9959 driver.","","","","","","","","A trait that allows a HAL to provide a means of …","","","Indicates various communication modes of the DDS. The …","","","Represents a means of serializing a DDS profile for …","","The configuration registers within the AD9959 DDS device. …","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","Get the serialized profile as a slice of 32-bit words.","","","","","","","Finalize DDS configuration","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get the configured amplitude of a channel.","Get the frequency of a channel.","Get the current phase of a specified channel.","Get the current reference clock frequency in Hz.","Get the current reference clock multiplier.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Construct and initialize the DDS.","Construct a new serializer.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Perform a self-test of the communication interface.","Inserts or removes the specified flags depending on the …","Configure the amplitude of a specified channel.","Configure the frequency of a specified channel.","Configure the phase of a specified channel.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Update a number of channels with the requested profile.",""],"i":[1,2,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,0,4,1,2,1,1,5,3,0,3,1,0,2,3,0,1,0,5,5,2,2,5,2,2,2,2,2,2,2,2,6,1,7,5,2,3,6,1,7,5,2,3,5,2,2,2,4,2,2,2,5,2,2,7,2,2,2,2,2,3,6,6,1,7,5,2,3,2,2,2,2,6,6,6,6,6,2,2,2,2,6,1,7,5,2,3,2,2,2,6,7,2,2,4,2,6,2,6,6,6,2,2,2,2,6,1,7,5,2,3,6,1,7,5,2,3,6,1,7,5,2,3,2,7,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["channel",3]],[[["channel",3],["channel",3]],["channel",3]],[[["channel",3],["channel",3]]],[[["channel",3],["channel",3]],["channel",3]],[[["channel",3],["channel",3]]],[[["channel",3]],["u8",0]],[[["channel",3],["channel",3]],["channel",3]],[[["channel",3],["channel",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mode",4]],["mode",4]],[[["channel",3]],["channel",3]],[[["channel",3],["channel",3]],["ordering",4]],[[["channel",3]],["channel",3]],[[["",0],["mode",4]],["result",4]],[[["channel",3],["channel",3]],["bool",0]],[[["channel",3],["channel",3]],["channel",3]],[[],["channel",3]],[[["mode",4],["mode",4]],["bool",0]],[[["channel",3],["channel",3]],["bool",0]],[[["channel",3],["intoiterator",8]]],[[["profileserializer",3]]],[[["channel",3],["formatter",3]],["result",6]],[[["channel",3],["formatter",3]],["result",6]],[[["channel",3],["formatter",3]],["result",6]],[[["channel",3],["formatter",3]],["result",6]],[[["channel",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["ad9959",3,[["interface",8]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",0]],["option",4,[["channel",3]]]],[[["u8",0]],["channel",3]],[[["u8",0]],["channel",3]],[[["intoiterator",8]],["channel",3]],[[["ad9959",3,[["interface",8]]],["channel",3]],["result",4,[["f32",0],["error",4]]]],[[["ad9959",3,[["interface",8]]],["channel",3]],["result",4,[["f32",0],["error",4]]]],[[["ad9959",3,[["interface",8]]],["channel",3]],["result",4,[["f32",0],["error",4]]]],[[["ad9959",3,[["interface",8]]]],["f32",0]],[[["ad9959",3,[["interface",8]]]],["result",4,[["u8",0],["error",4]]]],[[["channel",3],["",0]]],[[["channel",3],["channel",3]]],[[["channel",3],["channel",3]],["channel",3]],[[["channel",3],["channel",3]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channel",3]],["bool",0]],[[["channel",3]],["bool",0]],[[["channel",3],["channel",3]],["bool",0]],[[["interface",8],["outputpin",8],["mode",4],["f32",0],["u8",0]],["result",4,[["ad9959",3,[["interface",8]]],["error",4]]]],[[["mode",4]],["profileserializer",3]],[[["channel",3]],["channel",3]],[[["channel",3],["channel",3]],["option",4,[["ordering",4]]]],[[["",0],["u8",0]],["result",4]],[[["channel",3],["channel",3]]],[[["ad9959",3,[["interface",8]]]],["result",4,[["bool",0],["error",4]]]],[[["channel",3],["channel",3],["bool",0]]],[[["ad9959",3,[["interface",8]]],["channel",3],["f32",0]],["result",4,[["f32",0],["error",4]]]],[[["ad9959",3,[["interface",8]]],["channel",3],["f32",0]],["result",4,[["f32",0],["error",4]]]],[[["ad9959",3,[["interface",8]]],["channel",3],["f32",0]],["result",4,[["f32",0],["error",4]]]],[[["channel",3],["channel",3]],["channel",3]],[[["channel",3],["channel",3]]],[[["channel",3],["channel",3]],["channel",3]],[[["channel",3],["channel",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["channel",3],["channel",3]],["channel",3]],[[["profileserializer",3],["channel",3],["option",4,[["u32",0]]],["option",4,[["u16",0]]],["option",4,[["u32",0]]]]],[[["",0],["u8",0]],["result",4]]],"p":[[4,"Register"],[3,"Channel"],[4,"Error"],[8,"Interface"],[4,"Mode"],[3,"Ad9959"],[3,"ProfileSerializer"]]},\
"dual_iir":{"doc":"Dual IIR","t":[17,17,17,17,17,17,3,12,12,0,11,11,11,11,11,12,11,11,12,11,11,12,12,11,11,12,11,11,11,12,5,5,5,3,6,5,5,5,5,3,5,2,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,5,5,5,3,3,3,3,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,5,12,12,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,5,12,12,12,12,12,0,12,12,12,0,5,0,5,0,5,0,5,0,5,0,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,0,3,2,12,2,2,2,2,2,2,2,3,12,2,2,0,2,5,2,3,3,12,12,12,12,12,12,12,12,2,3,0,3,2,12,12,12,12,2,2,2,2,2,2,2,2,2,2,2,3,0,2,12,2,2,2,2,2,2,2,3,0,3,2,12,12,12,2,2,2,12,2,2,2],"n":["BATCH_SIZE","IIR_CASCADE_LENGTH","SAMPLE_PERIOD","SAMPLE_TICKS","SAMPLE_TICKS_LOG2","SCALE","Settings","afe","allow_hold","app","borrow","borrow_mut","clone","default","fmt","force_hold","from","get_metadata","iir_ch","into","recurse_paths","signal_generator","stream_target","string_get","string_set","telemetry_period","try_from","try_into","type_id","0","DCMI","DMA1_STR4","ETH","Local","Monotonic","SPI2","SPI3","SPI4","SPI5","Shared","SysTick","_","__rtic_internal_Monotonics","__rtic_internal_eth_Context","__rtic_internal_ethernet_linkSharedResources","__rtic_internal_ethernet_link_Context","__rtic_internal_ethernet_link_Monotonic_SpawnHandle","__rtic_internal_ethernet_link_Monotonic_spawn_after","__rtic_internal_ethernet_link_Monotonic_spawn_at","__rtic_internal_ethernet_link_spawn","__rtic_internal_idleSharedResources","__rtic_internal_idle_Context","__rtic_internal_init_Context","__rtic_internal_processLocalResources","__rtic_internal_processSharedResources","__rtic_internal_process_Context","__rtic_internal_settings_updateLocalResources","__rtic_internal_settings_updateSharedResources","__rtic_internal_settings_update_Context","__rtic_internal_settings_update_Monotonic_SpawnHandle","__rtic_internal_settings_update_Monotonic_spawn_after","__rtic_internal_settings_update_Monotonic_spawn_at","__rtic_internal_settings_update_spawn","__rtic_internal_spi2_Context","__rtic_internal_spi3_Context","__rtic_internal_spi4_Context","__rtic_internal_spi5_Context","__rtic_internal_startLocalResources","__rtic_internal_start_Context","__rtic_internal_start_Monotonic_SpawnHandle","__rtic_internal_start_Monotonic_spawn_after","__rtic_internal_start_Monotonic_spawn_at","__rtic_internal_start_spawn","__rtic_internal_telemetryLocalResources","__rtic_internal_telemetrySharedResources","__rtic_internal_telemetry_Context","__rtic_internal_telemetry_Monotonic_SpawnHandle","__rtic_internal_telemetry_Monotonic_spawn_after","__rtic_internal_telemetry_Monotonic_spawn_at","__rtic_internal_telemetry_spawn","adcs","adcs","afes","afes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","cancel","cancel","core","cpu_temp_sensor","cpu_temp_sensor","cs","dacs","dacs","device","digital_inputs","digital_inputs","eth","eth","ethernet_link","ethernet_link","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generator","generator","idle","idle","iir_state","iir_state","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","local","local","local","local","monotonics","network","network","network","network","network","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","process","process","reschedule_after","reschedule_after","reschedule_after","reschedule_after","reschedule_at","reschedule_at","reschedule_at","reschedule_at","sampling_timer","sampling_timer","settings","settings","settings","settings","settings_update","settings_update","shared","shared","shared","shared","shared","shared_resources","signal_generator","signal_generator","signal_generator","spi2","spi2","spi3","spi3","spi4","spi4","spi5","spi5","start","start","telemetry","telemetry","telemetry","telemetry","telemetry","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Context","Context","Monotonic","SharedResources","SpawnHandle","network","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","Context","SharedResources","network","Context","Monotonics","Monotonic","now","now","Context","LocalResources","SharedResources","adcs","dacs","digital_inputs","generator","iir_state","settings","signal_generator","telemetry","Context","LocalResources","Monotonic","SharedResources","SpawnHandle","afes","network","settings","signal_generator","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","Context","Context","Context","Context","Context","LocalResources","Monotonic","SpawnHandle","sampling_timer","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","Context","LocalResources","Monotonic","SharedResources","SpawnHandle","cpu_temp_sensor","network","settings","spawn","spawn_after","spawn_at","telemetry","SpawnHandle","spawn_after","spawn_at"],"q":["dual_iir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dual_iir::appdual_iir::app::eth","dual_iir::app::ethernet_link","","","","","","","","dual_iir::app::ethernet_link::Monotonic","","","dual_iir::app::idle","","","dual_iir::app::init","","dual_iir::app::monotonics","","dual_iir::app::monotonics::Monotonic","dual_iir::app::process","","","","","","","","","","","dual_iir::app::settings_update","","","","","","","","","","","","dual_iir::app::settings_update::Monotonic","","","dual_iir::app::spi2","dual_iir::app::spi3","dual_iir::app::spi4","dual_iir::app::spi5","dual_iir::app::start","","","","","","","","dual_iir::app::start::Monotonic","","","dual_iir::app::telemetry","","","","","","","","","","","","dual_iir::app::telemetry::Monotonic","",""],"d":["","","","","","","","Configure the Analog Front End (AFE) gain.","Specified true if DI1 should be used as a “hold” input.","The RTIC application module","","","","","","Specified true if “hold” should be forced regardless …","Returns the argument unchanged.","","Configure the IIR filter parameters.","Calls <code>U::from(self)</code>.","","Specifies the config for signal generators to add on to …","Specifies the target for data livestreaming.","","","Specifies the telemetry output period in seconds.","","","","","Interrupt handler to dispatch tasks at priority 1","","","","User code from within the module","","","","","","","","Monotonics used by the system","Execution context","Shared resources <code>ethernet_link</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Shared resources <code>idle</code> has access to","Execution context","Execution context","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","Execution context","Local resources <code>settings_update</code> has access to","Shared resources <code>settings_update</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Execution context","Execution context","Execution context","Execution context","Local resources <code>start</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Local resources <code>telemetry</code> has access to","Shared resources <code>telemetry</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Core (Cortex-M) peripherals","","","Critical section token for init","","","Device peripherals","","","Hardware task","","Software task","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Idle loop","","","","Initialization function","User code end","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Local Resources this task has access to","Local Resources this task has access to","Local Resources this task has access to","Local Resources this task has access to","Holds static methods for each monotonic.","","","","","","","","","","","","","","","","","","","","","","","","","","","Hardware task","","","","","","","","","","","","","","","","Software task","","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","","","","","Hardware task","","Hardware task","","Hardware task","","Hardware task","","Software task","","Software task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shared resources <code>ethernet_link</code> has access to","","","","","","","","","","Shared resources <code>idle</code> has access to","","","","This module holds the static implementation for …","","Read the current time from this monotonic","","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","","","","","","","","","","Local resources <code>settings_update</code> has access to","","Shared resources <code>settings_update</code> has access to","","","","","","","","","","","","","","","","","Local resources <code>start</code> has access to","","","","","","","","","","","Local resources <code>telemetry</code> has access to","","Shared resources <code>telemetry</code> has access to","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,5,6,3,2,7,8,9,4,10,11,12,13,14,15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,6,3,2,7,8,9,4,10,11,12,13,14,15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,19,22,26,29,7,3,23,7,3,4,7,3,4,0,0,0,0,19,22,26,29,6,3,2,7,8,9,4,10,11,12,13,14,15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,3,4,0,0,3,4,0,0,6,3,2,7,8,9,4,10,11,12,13,14,15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,11,18,21,25,0,6,8,20,24,27,7,8,9,4,10,11,12,13,14,15,16,17,18,5,20,21,23,24,25,27,28,0,0,19,22,26,29,19,22,26,29,3,17,6,10,20,24,0,0,9,11,21,25,28,0,6,10,20,0,0,0,0,0,0,0,0,0,0,0,0,6,10,24,6,3,2,7,8,9,4,10,11,12,13,14,15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,6,3,2,7,8,9,4,10,11,12,13,14,15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,6,3,2,7,8,9,4,10,11,12,13,14,15,16,17,18,19,5,20,21,22,23,24,25,26,27,28,29,0,0,0,0,0,27,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,4,4,4,4,4,10,10,10,0,0,0,0,0,5,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,23,24,24,0,0,0,24,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["settings",3]],["settings",3]],[[],["settings",3]],[[["settings",3],["formatter",3]],["result",6]],null,[[]],[[["settings",3]],["miniconfmetadata",3]],null,[[]],[[["settings",3],["string",3]],["option",4]],null,null,[[["settings",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["settings",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[]],null,null,null,null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,null,null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,nullrtic_internal_start_monotonic_spawnhandle",3]],["result",4]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3]],["result",4]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3]],["result",4]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]],["result",4]],null,null,null,null,null,null,null,null,null,null,[[["context",3]]],null,[[["context",3]]],[[["__rtic_internal_start_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["context",3]],["never",0]],null,null,null,[[["context",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[["peripherals",3]],["__rtic_internal_init_context",3]],[[["priority",3]],["__rtic_internal_idlesharedresources",3]],[[["priority",3]],["__rtic_internal_idle_context",3]],[[],["__rtic_internal_processlocalresources",3]],[[["priority",3]],["__rtic_internal_processsharedresources",3]],[[["priority",3]],["__rtic_internal_process_context",3]],[[["priority",3]],["__rtic_internal_eth_context",3]],[[["priority",3]],["__rtic_internal_spi2_context",3]],[[["priority",3]],["__rtic_internal_spi3_context",3]],[[["priority",3]],["__rtic_internal_spi4_context",3]],[[["priority",3]],["__rtic_internal_spi5_context",3]],[[],["__rtic_internal_startlocalresources",3]],[[["priority",3]],["__rtic_internal_start_context",3]],[[],["__rtic_internal_settings_updatelocalresources",3]],[[["priority",3]],["__rtic_internal_settings_updatesharedresources",3]],[[["priority",3]],["__rtic_internal_settings_update_context",3]],[[],["__rtic_internal_telemetrylocalresources",3]],[[["priority",3]],["__rtic_internal_telemetrysharedresources",3]],[[["priority",3]],["__rtic_internal_telemetry_context",3]],[[["priority",3]],["__rtic_internal_ethernet_linksharedresources",3]],[[["priority",3]],["__rtic_internal_ethernet_link_context",3]],null,[[["context",3]]],[[["__rtic_internal_start_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_start_monotonic_spawnhandle",3]]]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_settings_update_monotonic_spawnhandle",3]]]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_telemetry_monotonic_spawnhandle",3]]]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]]]],[[["__rtic_internal_start_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_start_monotonic_spawnhandle",3]]]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_settings_update_monotonic_spawnhandle",3]]]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_telemetry_monotonic_spawnhandle",3]]]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]]]],null,null,null,null,null,null,null,[[["context",3]]],null,null,null,null,null,null,null,null,null,null,[[["context",3]]],null,[[["context",3]]],null,[[["context",3]]],null,[[["context",3]]],null,[[["context",3]]],null,[[["context",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Settings"],[3,"__rtic_internal_Monotonics"],[3,"Local"],[3,"__rtic_internal_processLocalResources"],[3,"__rtic_internal_settings_updateLocalResources"],[3,"Shared"],[3,"__rtic_internal_init_Context"],[3,"__rtic_internal_idleSharedResources"],[3,"__rtic_internal_idle_Context"],[3,"__rtic_internal_processSharedResources"],[3,"__rtic_internal_process_Context"],[3,"__rtic_internal_eth_Context"],[3,"__rtic_internal_spi2_Context"],[3,"__rtic_internal_spi3_Context"],[3,"__rtic_internal_spi4_Context"],[3,"__rtic_internal_spi5_Context"],[3,"__rtic_internal_startLocalResources"],[3,"__rtic_internal_start_Context"],[3,"__rtic_internal_start_Monotonic_SpawnHandle"],[3,"__rtic_internal_settings_updateSharedResources"],[3,"__rtic_internal_settings_update_Context"],[3,"__rtic_internal_settings_update_Monotonic_SpawnHandle"],[3,"__rtic_internal_telemetryLocalResources"],[3,"__rtic_internal_telemetrySharedResources"],[3,"__rtic_internal_telemetry_Context"],[3,"__rtic_internal_telemetry_Monotonic_SpawnHandle"],[3,"__rtic_internal_ethernet_linkSharedResources"],[3,"__rtic_internal_ethernet_link_Context"],[3,"__rtic_internal_ethernet_link_Monotonic_SpawnHandle"]]},\
"idsp":{"doc":"","t":[3,3,8,3,3,8,3,3,3,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,18,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Accu","Complex","ComplexExt","Lockin","Lowpass","MulScaled","PLL","RPLL","Unwrapper","abs","abs_sqr","abs_sqr","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arg","arg","as_","atan2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","conj","copysign","cossin","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frequency","frequency","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_str","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hash","i","iir","iir_int","im","into","into","into","into","into","into","into","into_iter","inv","inv","inv","is_finite","is_infinite","is_nan","is_normal","is_one","is_zero","l1_norm","log2","log2","macc","macc_i32","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_scaled","mul_scaled","mul_scaled","mul_scaled","ne","ne","neg","neg","new","new","new","next","norm_sqr","one","output","overflowing_sub","phase","phase","phase","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powi","powu","product","product","re","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","saturating_add","saturating_add","saturating_scale","saturating_sub","saturating_sub","scale","serialize","serialize","serialize","set_one","set_zero","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unscale","update","update","update","update","update","update_iq","wraps","zero","IIR","Vec5","ba","borrow","borrow_mut","clone","default","deserialize","fmt","from","get_k","get_metadata","get_x_offset","into","new","recurse_paths","serialize","set_pi","set_x_offset","string_get","string_set","try_from","try_into","type_id","update","y_max","y_min","y_offset","IIR","SHIFT","Vec5","ba","borrow","borrow_mut","clone","default","deserialize","fmt","from","get_metadata","into","recurse_paths","serialize","string_get","string_set","try_from","try_into","type_id","update","y_max","y_min","y_offset"],"q":["idspidsp::iir","","","","","","","","","","","","","","","","","","","","","","","","","","","","idsp::iir_int","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A complex number in Cartesian form.","Complex extension trait offering DSP (fast, good accuracy) …","","Arbitrary order, high dynamic range, wide coefficient …","Full scale fixed point multiplication.","Type-II, sampled phase, discrete time PLL","Reciprocal PLL.","Overflow unwrapper.","","","Return the absolute square (the squared magnitude).","","","","","","","","","","","","","","Return the angle.","","2-argument arctangent function.","","","","","","","","","","","","","","","","","","","","","","Returns the complex conjugate. i.e. <code>re - i im</code>","","Compute the cosine and sine of an angle. This is ported …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the current frequency estimate","Return the current frequency estimate","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Return a Complex on the unit circle given an angle.","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","Returns imaginary unit","","","Imaginary portion of the complex number","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>1/self</code>","Checks if the given complex number is finite","Checks if the given complex number is infinite","Checks if the given complex number is NaN","Checks if the given complex number is normal","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","","log2(power) re full scale approximation","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new RPLL instance.","Create a new Complex","","Returns the square of the norm (since <code>T</code> doesn’t …","","Return the current filter output","Subtract <code>y - x</code> with signed overflow.","Return the current phase estimate","Return the current phase estimate","Return the last known phase","","","","","","","","","","","","","","","","","","","","","","","","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","","","Real portion of the complex number","","","","","","","","","","","","","","","Combine high and low i32 into a single downscaled i32, …","","","Multiplies <code>self</code> by the scalar <code>t</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divides <code>self</code> by the scalar <code>t</code>.","Update the lockin with a sample taken at a given phase.","Update the filter with a new sample.","Update the PLL with a new phase sample. This needs to be …","Advance the RPLL and optionally supply a new timestamp.","Unwrap a new sample from a sequence and update the …","Update the lockin with a sample taken at a local …","Return the current number of wraps","","IIR configuration.","IIR state and coefficients type.","","","","","","","","Returns the argument unchanged.","Compute the overall (DC feed-forward) gain.","","","Calls <code>U::from(self)</code>.","","","","Configures IIR filter coefficients for …","Convert input (<code>x</code>) offset to equivalent output (<code>y</code>) offset …","","","","","","Feed a new input value into the filter, update the filter …","","","","Integer biquad IIR","Coefficient fixed point format: signed Q2.30. Tailored to …","Generic vector for integer IIR filter. This struct is used …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Feed a new input value into the filter, update the filter …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,0,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,2,0,0,3,4,5,6,7,8,2,6,8,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,3,2,2,2,2,2,2,2,2,6,7,3,4,5,6,7,8,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,3,4,5,6,7,8,2,3,2,2,2,2,2,2,2,2,2,2,1,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,9,2,2,2,3,2,2,2,3,7,2,3,2,2,5,0,6,7,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,0,1,2,2,6,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,2,4,5,6,7,8,4,8,2,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"f":[null,null,null,null,null,null,null,null,null,[[]],[[["",0]]],[[["complex",3,[["i32",0]]]],["u32",0]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["",0]]],[[["complex",3]]],[[["complex",3],["",0]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["",0]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["",0]]],[[["complex",3,[["i32",0]]]],["i32",0]],[[["complex",3]]],[[["i32",0],["i32",0]],["i32",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["accu",3,[["clone",8]]]],["accu",3,[["clone",8]]]],[[["lockin",3]],["lockin",3]],[[["lowpass",3]],["lowpass",3]],[[["pll",3]],["pll",3]],[[["rpll",3]],["rpll",3]],[[["unwrapper",3,[["clone",8]]]],["unwrapper",3,[["clone",8]]]],[[["complex",3]],["complex",3]],[[["complex",3]],["complex",3]],[[]],[[["i32",0]]],[[],["accu",3,[["default",8]]]],[[],["lockin",3]],[[],["lowpass",3]],[[],["pll",3]],[[],["rpll",3]],[[],["unwrapper",3,[["default",8]]]],[[],["complex",3]],[[],["result",4,[["pll",3]]]],[[],["result",4,[["unwrapper",3]]]],[[],["result",4,[["complex",3]]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["",0]]],[[["complex",3],["",0]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["",0]]],[[["accu",3,[["partialeq",8]]],["accu",3]],["bool",0]],[[["complex",3],["complex",3]],["bool",0]],[[["accu",3,[["debug",8]]],["formatter",3]],["result",6]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["complex",3],["formatter",3]],["result",4,[["error",3]]]],[[["pll",3]],["i32",0]],[[["rpll",3]],["u32",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["complex",3]]]],[[["",0]],["complex",3]],[[],["complex",3]],[[]],[[]],[[["i32",0]],["complex",3,[["i32",0]]]],[[["f32",0]],["option",4,[["complex",3]]]],[[["f64",0]],["option",4,[["complex",3]]]],[[["i128",0]],["option",4,[["complex",3]]]],[[["i16",0]],["option",4,[["complex",3]]]],[[["i32",0]],["option",4,[["complex",3]]]],[[["i64",0]],["option",4,[["complex",3]]]],[[["i8",0]],["option",4,[["complex",3]]]],[[["isize",0]],["option",4,[["complex",3]]]],[[["str",0]],["result",4,[["complex",3]]]],[[["str",0],["u32",0]],["result",4,[["complex",3]]]],[[["u128",0]],["option",4,[["complex",3]]]],[[["u16",0]],["option",4,[["complex",3]]]],[[["u32",0]],["option",4,[["complex",3]]]],[[["u64",0]],["option",4,[["complex",3]]]],[[["u8",0]],["option",4,[["complex",3]]]],[[["usize",0]],["option",4,[["complex",3]]]],[[["complex",3],["",0]]],[[],["complex",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[["complex",3]],["complex",3]],[[["complex",3]],["bool",0]],[[["complex",3]],["bool",0]],[[["complex",3]],["bool",0]],[[["complex",3]],["bool",0]],[[["complex",3]],["bool",0]],[[["complex",3]],["bool",0]],[[["complex",3]]],[[["",0]]],[[["complex",3,[["i32",0]]]],["i32",0]],[[]],[[["i32",0],["u32",0]],["i32",0]],[[["complex",3],["",0]]],[[["complex",3],["",0]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3],["complex",3]],["complex",3]],[[["complex",3],["complex",3],["complex",3]],["complex",3]],[[["complex",3],["complex",3],["complex",3]]],[[["complex",3],["complex",3],["complex",3]]],[[["complex",3],["",0]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[]],[[["complex",3,[["i32",0]]],["i32",0]],["complex",3,[["i32",0]]]],[[["complex",3,[["i32",0]]],["i16",0]],["complex",3,[["i32",0]]]],[[["complex",3,[["i32",0]]],["complex",3,[["i32",0]]]],["complex",3,[["i32",0]]]],[[["accu",3,[["partialeq",8]]],["accu",3]],["bool",0]],[[["complex",3],["complex",3]],["bool",0]],[[["complex",3]]],[[["complex",3]]],[[],["accu",3]],[[["u32",0]],["rpll",3]],[[],["complex",3]],[[["accu",3]],["option",4]],[[["complex",3]]],[[],["complex",3]],[[["lowpass",3]],["i32",0]],[[]],[[["pll",3]],["i32",0]],[[["rpll",3]],["i32",0]],[[["unwrapper",3]]],[[["complex",3],["i128",0]]],[[["complex",3],["u64",0]]],[[["complex",3],["i64",0]]],[[["complex",3],["i16",0]]],[[["complex",3],["u16",0]]],[[["complex",3],["u32",0]]],[[["complex",3],["u64",0]]],[[["complex",3],["i8",0]]],[[["complex",3],["u16",0]]],[[["complex",3],["i16",0]]],[[["complex",3],["u128",0]]],[[["complex",3],["i32",0]]],[[["complex",3],["i128",0]]],[[["complex",3],["usize",0]]],[[["complex",3],["usize",0]]],[[["complex",3],["u8",0]]],[[["complex",3],["u8",0]]],[[["complex",3],["i8",0]]],[[["complex",3],["isize",0]]],[[["complex",3],["i32",0]]],[[["complex",3],["i64",0]]],[[["complex",3],["u32",0]]],[[["complex",3],["u128",0]]],[[["complex",3],["isize",0]]],[[["complex",3],["i32",0]],["complex",3]],[[["complex",3],["u32",0]],["complex",3]],[[],["complex",3]],[[],["complex",3]],null,[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["",0]]],[[["complex",3]]],[[["complex",3],["",0]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["",0]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["",0]]],[[["complex",3,[["i32",0]]],["complex",3,[["i32",0]]]],["complex",3,[["i32",0]]]],[[["i32",0],["i32",0],["u32",0]],["i32",0]],[[["",0]]],[[["complex",3,[["i32",0]]],["complex",3,[["i32",0]]]],["complex",3,[["i32",0]]]],[[["complex",3]],["complex",3]],[[["pll",3]],["result",4]],[[["unwrapper",3]],["result",4]],[[["complex",3]],["result",4]],[[["complex",3]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[["complex",3],["",0]]],[[["complex",3],["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["",0]]],[[["complex",3]]],[[["complex",3],["complex",3]]],[[["complex",3],["",0]]],[[["complex",3],["complex",3]]],[[["complex",3]]],[[],["complex",3]],[[],["complex",3]],[[["complex",3]],["option",4,[["f32",0]]]],[[["complex",3]],["option",4,[["f64",0]]]],[[["complex",3]],["option",4,[["i128",0]]]],[[["complex",3]],["option",4,[["i16",0]]]],[[["complex",3]],["option",4,[["i32",0]]]],[[["complex",3]],["option",4,[["i64",0]]]],[[["complex",3]],["option",4,[["i8",0]]]],[[["complex",3]],["option",4,[["isize",0]]]],[[["complex",3]],["option",4,[["u128",0]]]],[[["complex",3]],["option",4,[["u16",0]]]],[[["complex",3]],["option",4,[["u32",0]]]],[[["complex",3]],["option",4,[["u64",0]]]],[[["complex",3]],["option",4,[["u8",0]]]],[[["complex",3]],["option",4,[["usize",0]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["complex",3]],["complex",3]],[[["lockin",3],["i32",0],["i32",0],["u32",0]],["complex",3,[["i32",0]]]],[[["lowpass",3],["i32",0],["u32",0]],["i32",0]],[[["pll",3],["option",4,[["i32",0]]],["u32",0],["u32",0]]],[[["rpll",3],["option",4,[["i32",0]]],["u32",0],["u32",0]]],[[["unwrapper",3]]],[[["lockin",3],["i32",0],["complex",3,[["i32",0]]],["u32",0]],["complex",3,[["i32",0]]]],[[["unwrapper",3]],["i32",0]],[[],["complex",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["iir",3,[["clone",8]]]],["iir",3,[["clone",8]]]],[[],["iir",3,[["default",8]]]],[[],["result",4,[["iir",3]]]],[[["iir",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[["iir",3,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]]],[[["iir",3,[["",26,[["deserializeowned",8],["serialize",8],["miniconf",8]]]]]],["miniconfmetadata",3]],[[["iir",3,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]],["result",4,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]],["str",0]]]],[[]],[[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]]],["iir",3,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]],[[["iir",3,[["",26,[["deserializeowned",8],["serialize",8],["miniconf",8]]]]],["string",3]],["option",4]],[[["iir",3]],["result",4]],[[["iir",3,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]]],["result",4,[["str",0]]]],[[["iir",3,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]]]],[[["iir",3,[["",26,[["deserializeowned",8],["serialize",8],["miniconf",8]]]]],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["iir",3,[["",26,[["deserializeowned",8],["serialize",8],["miniconf",8]]]]],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["iir",3,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]],["vec5",6],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]],["bool",0]],["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8,[["",26,[["float",8],["default",8],["sum",8]]]]]]]]]]]]]]]]]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["iir",3]],["iir",3]],[[],["iir",3]],[[],["result",4,[["iir",3]]]],[[["iir",3],["formatter",3]],["result",6]],[[]],[[["iir",3]],["miniconfmetadata",3]],[[]],[[["iir",3],["string",3]],["option",4]],[[["iir",3]],["result",4]],[[["iir",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["iir",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["iir",3],["vec5",6],["i32",0]],["i32",0]],null,null,null],"p":[[8,"ComplexExt"],[3,"Complex"],[3,"Accu"],[3,"Lockin"],[3,"Lowpass"],[3,"PLL"],[3,"RPLL"],[3,"Unwrapper"],[8,"MulScaled"],[3,"IIR"],[3,"IIR"]]},\
"lockin":{"doc":"Lockin","t":[17,17,4,13,13,13,4,13,13,13,13,13,13,17,17,3,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,5,5,5,3,6,3,5,2,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,3,3,3,5,5,5,3,3,3,5,5,5,3,3,3,3,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,0,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,5,11,11,11,11,11,11,11,11,12,12,12,12,12,12,0,5,12,12,12,12,12,0,12,12,0,5,0,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,0,3,2,12,2,2,2,2,2,2,2,3,12,2,2,0,2,5,2,3,3,12,12,12,12,12,12,12,12,12,2,3,0,3,2,12,12,12,2,2,2,2,2,2,2,3,0,2,12,2,2,2,2,2,2,2,3,0,3,2,12,12,12,12,2,2,2,12,2,2,2],"n":["BATCH_SIZE","BATCH_SIZE_LOG2","Conf","External","InPhase","Internal","LockinMode","LogPower","Magnitude","Modulation","Phase","Quadrature","ReferenceFrequency","SAMPLE_TICKS","SAMPLE_TICKS_LOG2","Settings","afe","app","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","deserialize","deserialize","eq","fmt","fmt","fmt","from","from","from","get_metadata","get_metadata","get_metadata","into","into","into","lockin_harmonic","lockin_mode","lockin_phase","lockin_tc","output_conf","pll_tc","recurse_paths","recurse_paths","recurse_paths","serialize","serialize","stream_target","string_get","string_get","string_get","string_set","string_set","string_set","telemetry_period","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","DCMI","DMA1_STR4","ETH","Local","Monotonic","Shared","SysTick","_","__rtic_internal_Monotonics","__rtic_internal_eth_Context","__rtic_internal_ethernet_linkSharedResources","__rtic_internal_ethernet_link_Context","__rtic_internal_ethernet_link_Monotonic_SpawnHandle","__rtic_internal_ethernet_link_Monotonic_spawn_after","__rtic_internal_ethernet_link_Monotonic_spawn_at","__rtic_internal_ethernet_link_spawn","__rtic_internal_idleSharedResources","__rtic_internal_idle_Context","__rtic_internal_init_Context","__rtic_internal_processLocalResources","__rtic_internal_processSharedResources","__rtic_internal_process_Context","__rtic_internal_settings_updateLocalResources","__rtic_internal_settings_updateSharedResources","__rtic_internal_settings_update_Context","__rtic_internal_settings_update_Monotonic_SpawnHandle","__rtic_internal_settings_update_Monotonic_spawn_after","__rtic_internal_settings_update_Monotonic_spawn_at","__rtic_internal_settings_update_spawn","__rtic_internal_startLocalResources","__rtic_internal_start_Context","__rtic_internal_start_Monotonic_SpawnHandle","__rtic_internal_start_Monotonic_spawn_after","__rtic_internal_start_Monotonic_spawn_at","__rtic_internal_start_spawn","__rtic_internal_telemetryLocalResources","__rtic_internal_telemetrySharedResources","__rtic_internal_telemetry_Context","__rtic_internal_telemetry_Monotonic_SpawnHandle","__rtic_internal_telemetry_Monotonic_spawn_after","__rtic_internal_telemetry_Monotonic_spawn_at","__rtic_internal_telemetry_spawn","adcs","adcs","afes","afes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","cancel","cancel","core","cpu_temp_sensor","cpu_temp_sensor","cs","dacs","dacs","device","digital_inputs","digital_inputs","eth","eth","ethernet_link","ethernet_link","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generator","generator","idle","idle","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","local","local","local","local","lockin","lockin","monotonics","network","network","network","network","network","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","pll","pll","process","process","reschedule_after","reschedule_after","reschedule_after","reschedule_after","reschedule_at","reschedule_at","reschedule_at","reschedule_at","sampling_timer","sampling_timer","settings","settings","settings","settings","settings_update","settings_update","shared","shared","shared","shared","shared","shared_resources","signal_generator","signal_generator","start","start","telemetry","telemetry","telemetry","telemetry","telemetry","timestamper","timestamper","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Context","Context","Monotonic","SharedResources","SpawnHandle","network","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","Context","SharedResources","network","Context","Monotonics","Monotonic","now","now","Context","LocalResources","SharedResources","adcs","dacs","generator","lockin","pll","settings","signal_generator","telemetry","timestamper","Context","LocalResources","Monotonic","SharedResources","SpawnHandle","afes","network","settings","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","Context","LocalResources","Monotonic","SpawnHandle","sampling_timer","spawn","spawn_after","spawn_at","SpawnHandle","spawn_after","spawn_at","Context","LocalResources","Monotonic","SharedResources","SpawnHandle","cpu_temp_sensor","digital_inputs","network","settings","spawn","spawn_after","spawn_at","telemetry","SpawnHandle","spawn_after","spawn_at"],"q":["lockin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lockin::applockin::app::eth","lockin::app::ethernet_link","","","","","","","","lockin::app::ethernet_link::Monotonic","","","lockin::app::idle","","","lockin::app::init","","lockin::app::monotonics","","lockin::app::monotonics::Monotonic","lockin::app::process","","","","","","","","","","","","lockin::app::settings_update","","","","","","","","","","","lockin::app::settings_update::Monotonic","","","lockin::app::start","","","","","","","","lockin::app::start::Monotonic","","","lockin::app::telemetry","","","","","","","","","","","","","lockin::app::telemetry::Monotonic","",""],"d":["","","","Utilize an external modulation signal supplied to DI0","Output the in-phase component of the lockin signal.","Utilize an internally generated reference for demodulation","","Output the logarithmic power of the lockin","Output the lockin magnitude.","Output the lockin internal modulation frequency as a …","Output the phase of the lockin","Output the quadrature component of the lockin signal.","Output the lockin reference frequency as a sinusoid","","","","Configure the Analog Front End (AFE) gain.","The RTIC application module","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Specifies which harmonic to use for the lockin.","Specifies the operational mode of the lockin.","Specifies the LO phase offset.","Specifies the lockin time constant.","Specifies DAC output mode.","Specifis the PLL time constant.","","","","","","Specifies the target for data livestreaming.","","","","","","","Specifies the telemetry output period in seconds.","","","","","","","","","","","Interrupt handler to dispatch tasks at priority 1","","","","User code from within the module","","","","Monotonics used by the system","Execution context","Shared resources <code>ethernet_link</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Shared resources <code>idle</code> has access to","Execution context","Execution context","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","Execution context","Local resources <code>settings_update</code> has access to","Shared resources <code>settings_update</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Local resources <code>start</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Local resources <code>telemetry</code> has access to","Shared resources <code>telemetry</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Core (Cortex-M) peripherals","","","Critical section token for init","","","Device peripherals","","","Hardware task","","Software task","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Idle loop","","Initialization function","User code end","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Local Resources this task has access to","Local Resources this task has access to","Local Resources this task has access to","Local Resources this task has access to","","","Holds static methods for each monotonic.","","","","","","","","","","","","","","","","","","","","","","","","","Hardware task","","","","","","","","","","","","","","","","Software task","","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","","","","Software task","","Software task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shared resources <code>ethernet_link</code> has access to","","","","","","","","","","Shared resources <code>idle</code> has access to","","","","This module holds the static implementation for …","","Read the current time from this monotonic","","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","","","","","","","","","","","Local resources <code>settings_update</code> has access to","","Shared resources <code>settings_update</code> has access to","","","","","","","","","","","","Local resources <code>start</code> has access to","","","","","","","","","","","Local resources <code>telemetry</code> has access to","","Shared resources <code>telemetry</code> has access to","","","","","","","","","","","",""],"i":[0,0,0,1,2,1,0,2,2,2,2,2,2,0,0,0,3,0,2,1,3,2,1,3,2,1,3,3,2,1,1,2,1,3,2,1,3,2,1,3,2,1,3,3,3,3,3,3,3,2,1,3,2,1,3,2,1,3,2,1,3,3,2,1,3,2,1,3,2,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,5,7,8,5,4,9,10,11,6,12,13,14,15,16,17,7,18,19,20,21,22,23,24,25,26,27,8,5,4,9,10,11,6,12,13,14,15,16,17,7,18,19,20,21,22,23,24,25,26,27,17,20,24,27,9,5,21,9,5,6,9,5,21,0,0,0,0,17,20,24,27,8,5,4,9,10,11,6,12,13,14,15,16,17,7,18,19,20,21,22,23,24,25,26,27,5,6,0,0,0,0,8,5,4,9,10,11,6,12,13,14,15,16,17,7,18,19,20,21,22,23,24,25,26,27,13,16,19,23,5,6,0,8,10,18,22,25,9,10,11,6,12,13,14,15,16,7,18,19,21,22,23,25,26,5,6,0,0,17,20,24,27,17,20,24,27,5,15,8,12,18,22,0,0,11,13,19,23,26,0,5,6,0,0,0,0,8,12,22,5,6,8,5,4,9,10,11,6,12,13,14,15,16,17,7,18,19,20,21,22,23,24,25,26,27,8,5,4,9,10,11,6,12,13,14,15,16,17,7,18,19,20,21,22,23,24,25,26,27,8,5,4,9,10,11,6,12,13,14,15,16,17,7,18,19,20,21,22,23,24,25,26,27,0,0,0,0,0,25,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,6,6,6,6,6,12,6,12,6,0,0,0,0,0,7,18,18,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,21,21,22,22,0,0,0,22,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["conf",4]],["conf",4]],[[["lockinmode",4]],["lockinmode",4]],[[["settings",3]],["settings",3]],[[],["settings",3]],[[],["result",4,[["conf",4]]]],[[],["result",4,[["lockinmode",4]]]],[[["lockinmode",4],["lockinmode",4]],["bool",0]],[[["conf",4],["formatter",3]],["result",6]],[[["lockinmode",4],["formatter",3]],["result",6]],[[["settings",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["conf",4]],["miniconfmetadata",3]],[[["lockinmode",4]],["miniconfmetadata",3]],[[["settings",3]],["miniconfmetadata",3]],[[]],[[]],[[]],null,null,null,null,null,null,[[["conf",4],["string",3]],["option",4]],[[["lockinmode",4],["string",3]],["option",4]],[[["settings",3],["string",3]],["option",4]],[[["conf",4]],["result",4]],[[["lockinmode",4]],["result",4]],null,[[["conf",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["lockinmode",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["settings",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["conf",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[["lockinmode",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[["settings",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],null,null,null,[[]],null,null,null,null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,null,[[],["result",4,[["spawnhandle",3]]]],[[],["result",4,[["spawnhandle",3]]]],[[],["result",4]],null,null,null,nullrtic_internal_start_monotonic_spawnhandle",3]],["result",4]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3]],["result",4]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3]],["result",4]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]],["result",4]],null,null,null,null,null,null,null,null,null,null,[[["context",3]]],null,[[["context",3]]],[[["__rtic_internal_start_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["context",3]],["never",0]],null,[[["context",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["peripherals",3]],["__rtic_internal_init_context",3]],[[["priority",3]],["__rtic_internal_idlesharedresources",3]],[[["priority",3]],["__rtic_internal_idle_context",3]],[[],["__rtic_internal_processlocalresources",3]],[[["priority",3]],["__rtic_internal_processsharedresources",3]],[[["priority",3]],["__rtic_internal_process_context",3]],[[["priority",3]],["__rtic_internal_eth_context",3]],[[],["__rtic_internal_startlocalresources",3]],[[["priority",3]],["__rtic_internal_start_context",3]],[[],["__rtic_internal_settings_updatelocalresources",3]],[[["priority",3]],["__rtic_internal_settings_updatesharedresources",3]],[[["priority",3]],["__rtic_internal_settings_update_context",3]],[[],["__rtic_internal_telemetrylocalresources",3]],[[["priority",3]],["__rtic_internal_telemetrysharedresources",3]],[[["priority",3]],["__rtic_internal_telemetry_context",3]],[[["priority",3]],["__rtic_internal_ethernet_linksharedresources",3]],[[["priority",3]],["__rtic_internal_ethernet_link_context",3]],null,null,null,[[["context",3]]],[[["__rtic_internal_start_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_start_monotonic_spawnhandle",3]]]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_settings_update_monotonic_spawnhandle",3]]]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_telemetry_monotonic_spawnhandle",3]]]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]]]],[[["__rtic_internal_start_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_start_monotonic_spawnhandle",3]]]],[[["__rtic_internal_settings_update_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_settings_update_monotonic_spawnhandle",3]]]],[[["__rtic_internal_telemetry_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_telemetry_monotonic_spawnhandle",3]]]],[[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]],["result",4,[["__rtic_internal_ethernet_link_monotonic_spawnhandle",3]]]],null,null,null,null,null,null,null,[[["context",3]]],null,null,null,null,null,null,null,null,null,[[["context",3]]],null,[[["context",3]]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"LockinMode"],[4,"Conf"],[3,"Settings"],[3,"__rtic_internal_Monotonics"],[3,"Local"],[3,"__rtic_internal_processLocalResources"],[3,"__rtic_internal_settings_updateLocalResources"],[3,"Shared"],[3,"__rtic_internal_init_Context"],[3,"__rtic_internal_idleSharedResources"],[3,"__rtic_internal_idle_Context"],[3,"__rtic_internal_processSharedResources"],[3,"__rtic_internal_process_Context"],[3,"__rtic_internal_eth_Context"],[3,"__rtic_internal_startLocalResources"],[3,"__rtic_internal_start_Context"],[3,"__rtic_internal_start_Monotonic_SpawnHandle"],[3,"__rtic_internal_settings_updateSharedResources"],[3,"__rtic_internal_settings_update_Context"],[3,"__rtic_internal_settings_update_Monotonic_SpawnHandle"],[3,"__rtic_internal_telemetryLocalResources"],[3,"__rtic_internal_telemetrySharedResources"],[3,"__rtic_internal_telemetry_Context"],[3,"__rtic_internal_telemetry_Monotonic_SpawnHandle"],[3,"__rtic_internal_ethernet_linkSharedResources"],[3,"__rtic_internal_ethernet_link_Context"],[3,"__rtic_internal_ethernet_link_Monotonic_SpawnHandle"]]},\
"miniconf":{"doc":"Miniconf","t":[13,13,13,4,13,13,4,8,24,24,3,3,13,13,13,13,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,10,11,2,11,11,11,11,0,11,12,12,2,11,11,10,2,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11],"n":["AtomicUpdateRequired","BadIndex","Deserialization","Error","InsufficientStateDepth","InsufficientTopicLength","IterError","Miniconf","Miniconf","MiniconfAtomic","MiniconfMetadata","MqttClient","PathNotFound","PathTooLong","PathTooShort","SerializationFailed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","embedded_time","eq","fmt","fmt","force_republish","from","from","from","from","from","get","get_metadata","handled_update","heapless","into","into","into","into","iter","iter_settings","max_depth","max_topic_size","minimq","ne","new","recurse_paths","serde_json_core","set","settings","string_get","string_set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unchecked_iter_settings","update","0","MiniconfIter","borrow","borrow_mut","from","into","into_iter","next","try_from","try_into","type_id"],"q":["miniconf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniconf::Error","miniconf::iter","","","","","","","","",""],"d":["The path provided refers to a member of a configurable …","When indexing into an array, the index provided was out of …","The value provided for configuration could not be …","Errors that occur during settings configuration","The provided state vector is not long enough.","The provided topic length is not long enough.","Errors that occur during iteration over topic paths.","Derive-able trait for structures that can be mutated using …","Derive the Miniconf trait for custom types.","Derive the Miniconf trait for a custom type that must be …","Metadata about a settings structure.","MQTT settings interface.","The provided path wasn’t found in the structure.","The provided path was valid, but there was trailing data …","The provided path was valid, but did not specify a value …","The value provided could not be serialized.","","","","","","","","","","","","","","Force republication of the current settings.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a serialized settings value from a string path.","Get metadata about the settings structure.","Update the MQTT interface and service the network. Pass …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Provides iteration utilities over Miniconf structures.","Create an iterator to read all possible settings paths.","The maximum recursive depth of the structure.","The maximum length of a topic in the structure.","","","Construct a new MQTT settings interface.","","","Update settings directly from a string path and data.","Get the current settings from miniconf.","","","","","","","","","","","","","","","Create an iterator to read all possible settings paths.","Update the settings from the network stack without any …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[1,1,1,0,2,2,0,0,0,0,0,0,1,1,1,1,3,1,2,4,3,1,2,4,4,0,1,1,2,3,3,1,1,2,4,5,5,3,0,3,1,2,4,0,5,4,4,0,1,3,5,0,5,3,5,5,3,1,2,4,3,1,2,4,3,1,2,4,5,3,6,0,7,7,7,7,7,7,7,7,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["miniconfmetadata",3]],null,[[["error",4],["error",4]],["bool",0]],[[["error",4],["formatter",3]],["result",6]],[[["itererror",4],["formatter",3]],["result",6]],[[["mqttclient",3]]],[[]],[[["error",4]],["error",4]],[[]],[[]],[[]],[[["",0],["str",0]],["result",4,[["usize",0],["error",4]]]],[[["",0]],["miniconfmetadata",3]],[[["mqttclient",3]],["result",4,[["bool",0],["error",4]]]],null,[[]],[[]],[[]],[[]],null,[[["",0]],["result",4,[["miniconfiter",3],["itererror",4]]]],null,null,null,[[["error",4],["error",4]],["bool",0]],[[["str",0],["str",0],["ipaddr",4]],["result",4,[["mqttclient",3],["error",4]]]],[[["",0],["string",3]],["option",4]],null,[[["",0],["str",0]],["result",4,[["error",4]]]],[[["mqttclient",3]],["",0]],[[["",0],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["",0],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["miniconfiter",3]],[[["mqttclient",3]],["result",4,[["bool",0],["error",4]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["miniconfiter",3,[["",26,[["miniconf",8],["sized",8]]]]]],["option",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"Error"],[4,"IterError"],[3,"MqttClient"],[3,"MiniconfMetadata"],[8,"Miniconf"],[13,"Deserialization"],[3,"MiniconfIter"]]},\
"stabilizer":{"doc":"","t":[0,0,6,6,6,6,6,6,6,17,6,6,6,6,0,0,0,0,0,0,2,2,0,0,0,0,0,0,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,3,3,3,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,6,17,17,3,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,4,3,3,3,4,13,4,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,3,13,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,12,11,12,11,12,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,11,10,10,11,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,10,3,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,4,13,13,13,4,3,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,13,3,3,4,3,13,13,13,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,4,3,3,3,3,3,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,4,3,3,3,3,3,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,4,3,3,3,3,3,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,4,3,3,3,3,3,3,3,3,3,13,13,13,13,13,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,6,4,3,13,13,13,4,13,13,11,11,11,11,11,11,11,11,0,11,11,11,11,11,5,2,11,11,11,2,12,0,11,12,2,0,12,11,11,11,11,11,11,11,11,11,11,12,13,3,13,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,3,3,3,12,12,11,11,11,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["hardware","net","AFE0","AFE1","DigitalInput0","DigitalInput1","EthernetPhy","I2c1","I2c1Proxy","MONOTONIC_FREQUENCY","NetworkManager","NetworkStack","SystemTimer","Systick","adc","afe","cpu_temp_sensor","dac","delay","design_parameters","embedded_hal","hal","input_stamper","pounder","setup","shared_adc","signal_generator","timers","0","Adc0Input","Adc1Input","AdcCode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","from","from","from","from","from","into","into","into","lock","lock","new","new","start","start","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_buffer","with_buffer","G1","G10","G2","G5","Gain","ProgrammableGainAmplifier","as_multiplier","borrow","borrow","borrow_mut","borrow_mut","clone","deserialize","fmt","from","from","get_gain","get_metadata","into","into","new","recurse_paths","serialize","set_gain","string_get","string_set","try_from","try_from","try_from","try_from_primitive","try_into","try_into","type_id","type_id","CpuTempSensor","borrow","borrow_mut","from","get_temperature","into","new","try_from","try_into","type_id","0","Dac0Output","Dac1Output","DacCode","FULL_SCALE","LSB_PER_VOLT","VOLT_PER_LSB","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","from","from","from","from","from","into","into","into","lock","lock","new","new","start","start","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_buffer","with_buffer","AsmDelay","borrow","borrow_mut","delay_ms","delay_us","from","into","new","try_from","try_into","type_id","ADC_DAC_SCK_MAX","ADC_SETUP_TIME","DDS_MULTIPLIER","DDS_REF_CLK","DDS_SYNC_CLK_DIV","DDS_SYSTEM_CLK","MAX_SAMPLE_BUFFER_SIZE","POUNDER_IO_UPDATE_DELAY","POUNDER_IO_UPDATE_DURATION","POUNDER_QSPI_FREQUENCY","SYSCLK","SampleBuffer","TIMER_FREQUENCY","TIMER_PERIOD","InputStamper","borrow","borrow_mut","from","into","latest_timestamp","new","start","try_from","try_into","type_id","Adc","AttLe0","AttLe1","AttLe2","AttLe3","AttRstN","Bounds","Channel","ChannelState","DdsChannelState","DdsClockConfig","Error","ExtClkSel","GpioPin","I2c","In0","In1","InputChannelState","InvalidAddress","InvalidChannel","InvalidState","Led4Green","Led5Red","Led6Green","Led7Red","Led8Green","Led9Red","OscEnN","Out0","Out1","OutputChannelState","PounderDevices","Qspi","QspiInterface","Spi","amplitude","attenuation","attenuation","attenuation","attenuators","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone","clone","clone","clone","configure_mode","dds_output","deserialize","deserialize","deserialize","deserialize","deserialize","enabled","external_clock","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frequency","from","from","from","from","from","from","from","from","from","from","from","from","hrtimer","into","into","into","into","into","into","into","into","into","into","last","latch_attenuator","lm75","mixer","multiplier","new","new","next","parameters","phase_offset","power","previous","qspi","read","reference_clock","reset_attenuators","rf_power","sample_aux_adc","sample_converter","serialize","serialize","serialize","serialize","serialize","set_ext_clk","set_gpio_pin","start_stream","timestamp","transfer_attenuators","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","0","AttenuatorInterface","get_attenuation","latch_attenuator","reset_attenuators","set_attenuation","transfer_attenuators","DdsOutput","ProfileBuilder","borrow","borrow","borrow_mut","borrow_mut","builder","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","update_channels","write","write","Channel","HighResTimerE","One","Two","borrow","borrow","borrow_mut","borrow_mut","configure_single_shot","from","from","into","into","new","trigger","try_from","try_from","try_into","try_into","type_id","type_id","PowerMeasurementInterface","measure_power","sample_converter","Timestamper","borrow","borrow_mut","from","into","latest_timestamp","new","start","try_from","try_into","type_id","update_period","NetStorage","NetworkDevices","PounderDevices","StabilizerDevices","TcpSocketStorage","UdpSocketStorage","adc_dac_timer","adcs","afes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","dacs","dds_output","default","digital_inputs","from","from","from","from","from","from","into","into","into","into","into","into","ip_addrs","mac_address","neighbor_cache","net","phy","pounder","routes_cache","setup","sockets","stack","systick","tcp_socket_storage","temperature_sensor","timestamp_timer","timestamper","timestamper","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","udp_socket_storage","AdcChannel","AdcError","InUse","SharedAdc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","create_channel","fmt","from","from","from","into","into","into","new","read_normalized","read_raw","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BasicConfig","Config","Cosine","Error","InvalidAmplitude","InvalidFrequency","InvalidSymmetry","Signal","SignalGenerator","Square","Triangle","amplitude","amplitude","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_phase_accumulator","clone","clone","clone","clone","default","default","default","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","frequency","from","from","from","from","from","get_metadata","get_metadata","into","into","into","into","into","into_iter","new","next","phase","phase_increment","phase_offset","recurse_paths","recurse_paths","serialize","signal","signal","string_get","string_get","string_set","string_set","symmetry","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_config","type_id","type_id","type_id","type_id","type_id","update_waveform","Ch1Compare","Ch2Compare","Ch3Compare","Ch4Compare","ComparePulse","Disabled","Div1","Div1N1","Div1N8","Div2","Div4","Div8","Enable","InputFilter","PounderTimestampTimer","Prescaler","Reset","SamplingTimer","ShadowSamplingTimer","SlaveMode","TimestampTimer","Trigger","Trigger0","Trigger1","Trigger2","Trigger3","TriggerGenerator","TriggerSource","Update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","channels","channels","channels","from","from","from","from","from","from","from","from","from","generate_trigger","generate_trigger","generate_trigger","generate_trigger","get_period","get_period","get_period","get_period","into","into","into","into","into","into","into","into","into","new","new","new","new","set_external_clock","set_external_clock","set_external_clock","set_external_clock","set_period_ticks","set_period_ticks","set_period_ticks","set_period_ticks","set_slave_mode","set_slave_mode","set_slave_mode","set_slave_mode","set_trigger_source","set_trigger_source","set_trigger_source","set_trigger_source","start","start","start","start","tim2","tim3","tim5","tim8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_event","update_event","update_event","update_event","CaptureSource1","CaptureSource2","CaptureSource3","CaptureSource4","Channel1","Channel1InputCapture","Channel2","Channel2InputCapture","Channel3","Channel3InputCapture","Channel4","Channel4InputCapture","Channels","TI1","TI1","TI2","TI2","TI3","TI3","TI4","TI4","TRC","TRC","TRC","TRC","UpdateEvent","address","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ch1","ch2","ch3","ch4","check_overcapture","check_overcapture","check_overcapture","check_overcapture","configure_filter","configure_filter","configure_filter","configure_filter","configure_prescaler","configure_prescaler","configure_prescaler","configure_prescaler","enable","enable","enable","enable","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into_input_capture","into_input_capture","into_input_capture","into_input_capture","latest_capture","latest_capture","latest_capture","latest_capture","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","new","new","to_output_compare","to_output_compare","to_output_compare","to_output_compare","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","CaptureSource1","CaptureSource2","CaptureSource3","CaptureSource4","Channel1","Channel1InputCapture","Channel2","Channel2InputCapture","Channel3","Channel3InputCapture","Channel4","Channel4InputCapture","Channels","TI1","TI1","TI2","TI2","TI3","TI3","TI4","TI4","TRC","TRC","TRC","TRC","UpdateEvent","address","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ch1","ch2","ch3","ch4","check_overcapture","check_overcapture","check_overcapture","check_overcapture","clone","clone","clone","clone","configure_filter","configure_filter","configure_filter","configure_filter","configure_prescaler","configure_prescaler","configure_prescaler","configure_prescaler","enable","enable","enable","enable","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_input_capture","into_input_capture","into_input_capture","into_input_capture","latest_capture","latest_capture","latest_capture","latest_capture","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","new","new","to_output_compare","to_output_compare","to_output_compare","to_output_compare","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","CaptureSource1","CaptureSource2","CaptureSource3","CaptureSource4","Channel1","Channel1InputCapture","Channel2","Channel2InputCapture","Channel3","Channel3InputCapture","Channel4","Channel4InputCapture","Channels","TI1","TI1","TI2","TI2","TI3","TI3","TI4","TI4","TRC","TRC","TRC","TRC","UpdateEvent","address","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ch1","ch2","ch3","ch4","check_overcapture","check_overcapture","check_overcapture","check_overcapture","clone","clone","clone","clone","configure_filter","configure_filter","configure_filter","configure_filter","configure_prescaler","configure_prescaler","configure_prescaler","configure_prescaler","enable","enable","enable","enable","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_input_capture","into_input_capture","into_input_capture","into_input_capture","latest_capture","latest_capture","latest_capture","latest_capture","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","new","new","to_output_compare","to_output_compare","to_output_compare","to_output_compare","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","CaptureSource1","CaptureSource2","CaptureSource3","CaptureSource4","Channel1","Channel1InputCapture","Channel2","Channel2InputCapture","Channel3","Channel3InputCapture","Channel4","Channel4InputCapture","Channels","TI1","TI1","TI2","TI2","TI3","TI3","TI4","TI4","TRC","TRC","TRC","TRC","UpdateEvent","address","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ch1","ch2","ch3","ch4","check_overcapture","check_overcapture","check_overcapture","check_overcapture","clone","clone","clone","clone","configure_filter","configure_filter","configure_filter","configure_filter","configure_prescaler","configure_prescaler","configure_prescaler","configure_prescaler","enable","enable","enable","enable","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_input_capture","into_input_capture","into_input_capture","into_input_capture","latest_capture","latest_capture","latest_capture","latest_capture","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","listen_dma","new","new","to_output_compare","to_output_compare","to_output_compare","to_output_compare","trigger","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","DEFAULT_MQTT_BROKER","NetworkReference","NetworkState","NetworkUsers","NoChange","NoChange","SettingsChanged","UpdateState","Updated","Updated","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","configure_streaming","data_stream","direct_stream","eq","from","from","from","get_device_prefix","heapless","into","into","into","miniconf","miniconf","network_processor","new","processor","serde","telemetry","telemetry","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","0","AdcDacData","DataStream","Fls","FrameGenerator","StreamFormat","StreamTarget","Unknown","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","default","deserialize","eq","fmt","fmt","from","from","from","from","get_metadata","into","into","into","into","ip","port","process","recurse_paths","serialize","set_remote","setup_streaming","string_get","string_set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","NetworkProcessor","borrow","borrow_mut","from","handle_link","into","new","stack","try_from","try_into","type_id","update","Telemetry","TelemetryBuffer","TelemetryClient","adcs","adcs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","cpu_temp","dacs","dacs","default","digital_inputs","digital_inputs","finalize","from","from","from","into","into","into","new","publish","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update"],"q":["stabilizer","","stabilizer::hardware","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::adc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::afe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::cpu_temp_sensor","","","","","","","","","","stabilizer::hardware::dac","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::delay","","","","","","","","","","","stabilizer::hardware::design_parameters","","","","","","","","","","","","","","stabilizer::hardware::input_stamper","","","","","","","","","","","stabilizer::hardware::pounderstabilizer::hardware::pounder::Error","stabilizer::hardware::pounder::attenuators","","","","","","stabilizer::hardware::pounder::dds_output","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::pounder::hrtimer","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::pounder::rf_power","","","stabilizer::hardware::pounder::timestamp","","","","","","","","","","","","stabilizer::hardware::setup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::shared_adc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::signal_generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::timers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::timers::tim2","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::timers::timstabilizer::hardware::timers::timstabilizer::hardware::timers::timstabilizer::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::net::NetworkState","stabilizer::net::data_stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::net::network_processor","","","","","","","","","","","","stabilizer::net::telemetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","System timer (RTIC Monotonic) tick frequency","","","","","","","STM32 Temperature Sensor Driver","","Basic blocking delay","","","! Module for all hardware-specific setup of Stabilizer","","","","","","","","Represents data associated with ADC.","Represents data associated with ADC.","A type representing an ADC sample.","","","","","","","","Returns the argument unchanged.","Construct an ADC code from the stabilizer-defined code …","Construct an ADC code from a provided binary …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Construct the ADC input channel.","Construct the ADC input channel.","Enable the ADC DMA transfer sequence.","Enable the ADC DMA transfer sequence.","","","","","","","","","","","Wait for the transfer of the currently active buffer to …","Wait for the transfer of the currently active buffer to …","","","","","","A programmable gain amplifier that allows for setting the …","Get the AFE gain as a numerical value.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get the programmed gain of the analog front-end.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new programmable gain driver.","","","Set the gain of the front-end.","","","","","","","","","","","A driver to access the CPU temeprature sensor.","","","Returns the argument unchanged.","Get the temperature of the CPU in degrees Celsius.","Calls <code>U::from(self)</code>.","Construct the temperature sensor.","","","","","Represents data associated with DAC.","Represents data associated with DAC.","Custom type for referencing DAC output codes. The internal …","","","","","","","","","","","Create a dac code from the provided DAC output code.","Returns the argument unchanged.","Encode signed 16-bit values into DAC offset binary for a …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Construct the DAC output channel.","Construct the DAC output channel.","","","","","","","","","","","","","Wait for the transfer of the currently active buffer to …","Wait for the transfer of the currently active buffer to …","A basic delay implementation.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new delay.","","","","The maximum DAC/ADC serial clock line frequency. This is a …","The ADC setup time is the number of seconds after the CSn …","The multiplier used for the DDS reference clock PLL.","The DDS reference clock frequency in MHz.","The divider from the DDS system clock to the SYNC_CLK …","The DDS system clock frequency after the internal PLL …","The maximum ADC/DAC sample processing buffer size.","The delay after initiating a QSPI transfer before …","The duration to assert IO_Update for the pounder DDS.","The QSPI frequency for communicating with the pounder DDS.","The system clock, used in various timer calculations","","The optimal counting frequency of the hardware timers used …","","The timestamper for DI0 reference clock inputs.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the latest timestamp that has occurred.","Construct the DI0 input timestamper.","Start to capture timestamps on DI0.","","","","","","","","","","","The numerical value (discriminant) of the Channel enum is …","","","","","","","","","","","","","","","","","","","","","","","","A structure containing implementation for Pounder hardware.","","A structure for the QSPI interface for the DDS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configure the operations mode of the interface.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Latch a configuration into a digital attenuator.","","","","Initialize the QSPI interface.","Construct and initialize pounder-specific hardware.","","","","","","","","","Reset all of the attenuators to a power-on default state.","","Sample one of the two auxiliary ADC channels associated …","Sample an ADC channel.","","","","","","Select external reference clock input.","Set the state (its electrical level) of the given GPIO pin …","","","Read the raw attenuation codes stored in the attenuator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write data over QSPI to the DDS.","","Provide an interface for managing digital attenuators on …","Get the attenuation of a channel.","","","Set the attenuation of a single channel.","","The DDS profile update stream.","A temporary builder for serializing and writing profiles.","","","","","Get a builder for serializing a Pounder DDS profile.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new DDS output stream.","","","","","","","Update a number of channels with the provided configuration","Write a profile to the stream.","Write the profile to the DDS asynchronously.","A HRTimer output channel.","The high resolution timer. Currently, only Timer E is …","","","","","","","Configure the timer to operate in single-shot mode.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new high resolution timer for generating …","Generate a single trigger of the timer to start the output …","","","","","","","Provide an interface to measure RF input power in dBm.","Measure the power of an input channel in dBm.","","Software unit to timestamp stabilizer ADC samples using an …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Obtain a timestamp.","Construct the pounder sample timestamper.","Start collecting timestamps.","","","","Update the period of the underlying timestamp timer.","","The available networking devices on Stabilizer.","The available Pounder-specific hardware interfaces.","The available hardware interfaces on Stabilizer.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Configure the stabilizer hardware for operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single channel on an ADC peripheral.","","Indicates that the ADC is already in use","An ADC peripheral that can provide ownership of individual …","","","","","","","","Allocate an ADC channel for usage.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new shared ADC driver.","Read the ADC channel and normalize the result.","Read the raw ADC sample for the channel.","","","","","","","","","","Basic configuration for a generated signal.","","","Represents the errors that can occur when attempting to …","The provided amplitude is out-of-range.","The provided frequency is out of range.","The provided symmetry is out of range.","Types of signals that can be generated.","","","","The amplitude of the output signal in volts.","The full-scale output code of the signal","","","","","","","","","","","Clear the phase accumulator.","","","","","","","","","","","","","","","The frequency of the generated signal in Hertz.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Construct a new signal generator with some specific config.","Get the next value in the generator sequence.","The phase of the output signal in turns.","The frequency tuning word of the signal. Phase is …","The phase offset","","","","The signal type that should be generated. See Signal …","The type of signal being generated","","","","","The normalized symmetry of the signal. At 0% symmetry, the …","","","","","","","","","","","Convert configuration into signal generator values.","","","","","","Update waveform generation settings.","","","","","","","","","","","","","","Optional input capture preconditioning filter …","The timer used for managing ADC sampling.","Prescalers for externally-supplied reference clocks.","","The timer used for managing ADC sampling.","The timer used for managing ADC sampling.","Optional slave operation modes of a timer.","The timer used for managing ADC sampling.","","","","","","The event that should generate an external trigger from …","Selects the trigger source for the timer peripheral.","","","","","","","","","","","","","","","","","","","","Get the timer capture/compare channels.","Get the timer capture/compare channels.","Get the timer capture/compare channels.","Get the timer capture/compare channels.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Configure the timer peripheral to generate a trigger based …","Configure the timer peripheral to generate a trigger based …","Configure the timer peripheral to generate a trigger based …","Configure the timer peripheral to generate a trigger based …","Get the period of the timer.","Get the period of the timer.","Get the period of the timer.","Get the period of the timer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct the sampling timer.","Construct the sampling timer.","Construct the sampling timer.","Construct the sampling timer.","Clock the timer from an external source.","Clock the timer from an external source.","Clock the timer from an external source.","Clock the timer from an external source.","Manually set the period of the timer.","Manually set the period of the timer.","Manually set the period of the timer.","Manually set the period of the timer.","","","","","Select a trigger source for the timer peripheral.","Select a trigger source for the timer peripheral.","Select a trigger source for the timer peripheral.","Select a trigger source for the timer peripheral.","Start the timer.","Start the timer.","Start the timer.","Start the timer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the timer update event.","Get the timer update event.","Get the timer update event.","Get the timer update event.","Capture/Compare 1 selection","Capture/Compare 2 selection","Capture/compare 3 selection","Capture/Compare 4 selection","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","The channels representing the timer.","2: CC2 channel is configured as input, IC2 is mapped on TI1","1: CC1 channel is configured as input, IC1 is mapped on TI1","1: CC2 channel is configured as input, IC2 is mapped on TI2","2: CC1 channel is configured as input, IC1 is mapped on TI2","2: CC4 channel is configured as input, IC4 is mapped on TI3","1: CC3 channel is configured as input, IC3 is mapped on TI3","1: CC4 channel is configured as input, IC4 is mapped on TI4","2: CC3 channel is configured as input, IC3 is mapped on TI4","3: CC2 channel is configured as input, IC2 is mapped on TRC","3: CC1 channel is configured as input, IC1 is mapped on TRC","3: CC4 channel is configured as input, IC4 is mapped on TRC","3: CC3 channel is configured as input, IC3 is mapped on TRC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Enable DMA requests upon timer updates.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Create a new update event","Construct a new set of channels.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Trigger a DMA request manually","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Capture/Compare 1 selection","Capture/Compare 2 selection","Capture/compare 3 selection","Capture/Compare 4 selection","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","The channels representing the timer.","2: CC2 channel is configured as input, IC2 is mapped on TI1","1: CC1 channel is configured as input, IC1 is mapped on TI1","1: CC2 channel is configured as input, IC2 is mapped on TI2","2: CC1 channel is configured as input, IC1 is mapped on TI2","2: CC4 channel is configured as input, IC4 is mapped on TI3","1: CC3 channel is configured as input, IC3 is mapped on TI3","1: CC4 channel is configured as input, IC4 is mapped on TI4","2: CC3 channel is configured as input, IC3 is mapped on TI4","3: CC2 channel is configured as input, IC2 is mapped on TRC","3: CC1 channel is configured as input, IC1 is mapped on TRC","3: CC4 channel is configured as input, IC4 is mapped on TRC","3: CC3 channel is configured as input, IC3 is mapped on TRC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","","","","","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Enable DMA requests upon timer updates.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Create a new update event","Construct a new set of channels.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Trigger a DMA request manually","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Capture/Compare 1 selection","Capture/Compare 2 selection","Capture/compare 3 selection","Capture/Compare 4 selection","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","The channels representing the timer.","2: CC2 channel is configured as input, IC2 is mapped on TI1","1: CC1 channel is configured as input, IC1 is mapped on TI1","1: CC2 channel is configured as input, IC2 is mapped on TI2","2: CC1 channel is configured as input, IC1 is mapped on TI2","2: CC4 channel is configured as input, IC4 is mapped on TI3","1: CC3 channel is configured as input, IC3 is mapped on TI3","1: CC4 channel is configured as input, IC4 is mapped on TI4","2: CC3 channel is configured as input, IC3 is mapped on TI4","3: CC2 channel is configured as input, IC2 is mapped on TRC","3: CC1 channel is configured as input, IC1 is mapped on TRC","3: CC4 channel is configured as input, IC4 is mapped on TRC","3: CC3 channel is configured as input, IC3 is mapped on TRC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","","","","","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Enable DMA requests upon timer updates.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Create a new update event","Construct a new set of channels.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Trigger a DMA request manually","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Capture/Compare 1 selection","Capture/Compare 2 selection","Capture/compare 3 selection","Capture/Compare 4 selection","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","A capture/compare channel of the timer.","A capture channel of the timer.","The channels representing the timer.","2: CC2 channel is configured as input, IC2 is mapped on TI1","1: CC1 channel is configured as input, IC1 is mapped on TI1","1: CC2 channel is configured as input, IC2 is mapped on TI2","2: CC1 channel is configured as input, IC1 is mapped on TI2","2: CC4 channel is configured as input, IC4 is mapped on TI3","1: CC3 channel is configured as input, IC3 is mapped on TI3","1: CC4 channel is configured as input, IC4 is mapped on TI4","2: CC3 channel is configured as input, IC3 is mapped on TI4","3: CC2 channel is configured as input, IC2 is mapped on TRC","3: CC1 channel is configured as input, IC1 is mapped on TRC","3: CC4 channel is configured as input, IC4 is mapped on TRC","3: CC3 channel is configured as input, IC3 is mapped on TRC","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","Check if an over-capture event has occurred.","","","","","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture input pre-filter.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Configure the input capture prescaler.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","Enable the input capture to begin capturing timer values.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Operate the channel in input-capture mode.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Get the latest capture from the channel.","Enable DMA requests upon timer updates.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Allow the channel to generate DMA requests.","Create a new update event","Construct a new set of channels.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Operate the channel as an output-compare.","Trigger a DMA request manually","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default MQTT broker IP address if unspecified.","","","A structure of Stabilizer’s default network users.","","","","","","","","","","","","","","Enable live data streaming.","Stabilizer data stream capabilities","Direct the stream to the provided remote target.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the MQTT prefix of a device.","! Stabilizer network management module ! ! # Design ! The …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Construct Stabilizer’s default network users.","","","","","","","","","","","","","","Update and process all of the network users state.","","Streamed data contains ADC0, ADC1, DAC0, and DAC1 …","The “consumer” portion of the data stream.","Streamed data in FLS (fiber length stabilization) format. …","The data generator for a stream.","Specifies the format of streamed data","Represents the destination for the UDP stream to send data …","Reserved, unused format specifier.","Add a batch to the current stream frame.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Process any data for transmission.","","","Configure the remote endpoint of the stream.","Configure streaming on a device.","","","","","","","","","","","","","","","Processor for managing network hardware.","","","Returns the argument unchanged.","Handle ethernet link connection status.","Calls <code>U::from(self)</code>.","Construct a new network processor.","","","","","Process and update the state of the network.","The telemetry structure is data that is ultimately …","The telemetry buffer is used for storing sample values …","The telemetry client for reporting telemetry data over …","The latest input sample on ADC0/ADC1.","Most recent input voltage measurement.","","","","","","","","The CPU temperature in degrees Celsius.","The latest output code on DAC0/DAC1.","Most recent output voltage.","","The latest digital input states during processing.","Most recent digital input assertion state.","Convert the telemetry buffer to finalized, SI-unit …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new telemetry client.","Publish telemetry over MQTT","","","","","","","","","","","Update the telemetry client"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,3,1,2,3,1,1,1,1,2,3,1,2,3,2,3,2,3,2,3,1,1,2,3,1,2,3,1,2,3,2,3,4,4,4,4,0,0,4,5,4,5,4,4,4,4,5,4,5,4,5,4,5,4,4,5,4,4,5,4,4,4,5,4,5,4,0,6,6,6,6,6,6,6,6,6,7,0,0,0,7,7,7,7,8,9,7,8,9,7,7,7,7,8,9,7,8,9,8,9,8,9,8,9,7,7,8,9,7,8,9,7,8,9,8,9,0,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,12,0,0,0,0,0,13,0,12,14,14,0,12,12,12,13,13,13,13,13,13,13,14,14,0,0,12,0,12,15,16,17,18,0,19,20,13,12,14,15,16,17,18,21,19,20,13,12,14,15,16,17,18,21,18,13,12,14,15,16,17,18,21,19,0,15,16,17,18,21,15,21,13,13,12,14,15,16,17,18,21,15,19,20,13,13,12,12,14,15,16,17,18,21,0,19,20,13,12,14,15,16,17,18,21,13,20,20,17,21,19,20,13,16,15,17,13,19,19,21,20,0,20,20,15,16,17,18,21,20,20,19,0,20,19,20,13,12,14,15,16,17,18,21,19,20,13,12,14,15,16,17,18,21,19,20,13,12,14,15,16,17,18,21,19,22,0,23,23,23,23,23,0,0,24,25,24,25,24,24,25,24,25,24,24,25,24,25,24,25,25,24,25,0,0,26,26,26,27,26,27,27,26,27,26,27,27,27,26,27,26,27,26,27,0,28,28,0,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,30,30,30,31,32,30,33,34,35,31,32,30,33,34,35,34,35,30,33,31,30,31,32,30,33,34,35,31,32,30,33,34,35,31,32,31,30,32,33,31,0,31,32,30,31,30,30,30,33,31,32,30,33,34,35,31,32,30,33,34,35,31,32,30,33,34,35,31,0,0,36,0,37,38,36,37,38,36,36,38,36,37,38,36,37,38,36,38,37,37,37,38,36,37,38,36,37,38,36,0,0,39,0,40,40,40,0,0,39,39,41,42,39,41,40,42,43,39,41,40,42,43,43,39,41,40,42,41,42,43,39,41,39,41,40,42,43,41,39,41,40,42,43,39,41,39,41,40,42,43,43,43,43,41,42,42,39,41,39,41,42,39,41,39,41,41,39,41,40,42,43,39,41,40,42,43,41,39,41,40,42,43,43,44,44,44,44,44,45,46,47,47,46,46,46,44,0,0,0,44,0,0,0,0,45,48,48,48,48,0,0,44,44,48,45,47,46,49,50,51,52,44,48,45,47,46,49,50,51,52,49,50,51,52,44,48,45,47,46,49,50,51,52,49,50,51,52,49,50,51,52,44,48,45,47,46,49,50,51,52,49,50,51,52,49,50,51,52,49,50,51,52,49,50,51,52,49,50,51,52,49,50,51,52,0,0,0,0,44,48,45,47,46,46,49,50,51,52,46,44,48,45,47,46,49,50,51,52,44,48,45,47,46,49,50,51,52,49,50,51,52,0,0,0,0,0,0,0,0,0,0,0,0,0,53,54,53,54,55,56,55,56,53,54,55,56,0,57,58,59,60,61,62,63,57,64,58,65,59,66,60,61,62,63,57,64,58,65,59,66,60,62,62,62,62,57,58,59,60,57,58,59,60,57,58,59,60,57,58,59,60,61,62,63,57,64,58,65,59,66,60,61,62,63,57,64,58,65,59,66,60,63,64,65,66,57,58,59,60,61,63,57,64,58,65,59,66,60,61,62,63,64,65,66,61,61,62,63,57,64,58,65,59,66,60,61,62,63,57,64,58,65,59,66,60,61,62,63,57,64,58,65,59,66,60,0,0,0,0,0,0,0,0,0,0,0,0,0,67,68,67,68,69,70,69,70,67,68,69,70,0,71,72,73,74,75,76,77,71,78,72,79,73,80,74,67,68,69,70,75,76,77,71,78,72,79,73,80,74,67,68,69,70,76,76,76,76,71,72,73,74,67,68,69,70,71,72,73,74,71,72,73,74,71,72,73,74,67,68,69,70,67,68,69,70,75,76,77,71,78,72,79,73,80,74,67,68,69,70,75,76,77,71,78,72,79,73,80,74,67,68,69,70,77,78,79,80,71,72,73,74,75,77,71,78,72,79,73,80,74,75,76,77,78,79,80,75,75,76,77,71,78,72,79,73,80,74,67,68,69,70,75,76,77,71,78,72,79,73,80,74,67,68,69,70,75,76,77,71,78,72,79,73,80,74,67,68,69,70,0,0,0,0,0,0,0,0,0,0,0,0,0,53,54,53,54,55,56,55,56,53,54,55,56,0,81,82,83,84,85,86,87,81,88,82,89,83,90,84,53,54,55,56,85,86,87,81,88,82,89,83,90,84,53,54,55,56,86,86,86,86,81,82,83,84,53,54,55,56,81,82,83,84,81,82,83,84,81,82,83,84,53,54,55,56,53,54,55,56,85,86,87,81,88,82,89,83,90,84,53,54,55,56,85,86,87,81,88,82,89,83,90,84,53,54,55,56,87,88,89,90,81,82,83,84,85,87,81,88,82,89,83,90,84,85,86,87,88,89,90,85,85,86,87,81,88,82,89,83,90,84,53,54,55,56,85,86,87,81,88,82,89,83,90,84,53,54,55,56,85,86,87,81,88,82,89,83,90,84,53,54,55,56,0,0,0,0,0,0,0,0,0,0,0,0,0,91,92,91,92,93,94,93,94,91,92,93,94,0,95,96,97,98,99,100,101,95,102,96,103,97,104,98,91,92,93,94,99,100,101,95,102,96,103,97,104,98,91,92,93,94,100,100,100,100,95,96,97,98,91,92,93,94,95,96,97,98,95,96,97,98,95,96,97,98,91,92,93,94,91,92,93,94,99,100,101,95,102,96,103,97,104,98,91,92,93,94,99,100,101,95,102,96,103,97,104,98,91,92,93,94,101,102,103,104,95,96,97,98,99,101,95,102,96,103,97,104,98,99,100,101,102,103,104,99,99,100,101,95,102,96,103,97,104,98,91,92,93,94,99,100,101,95,102,96,103,97,104,98,91,92,93,94,99,100,101,95,102,96,103,97,104,98,91,92,93,94,0,0,0,0,105,106,105,0,105,106,105,107,106,105,107,106,106,107,0,107,106,105,107,106,0,0,105,107,106,0,107,0,107,107,0,0,107,105,107,106,105,107,106,105,107,106,107,108,109,0,109,0,0,0,109,110,110,111,112,109,110,111,112,109,112,109,112,112,109,112,109,110,111,112,109,112,110,111,112,109,112,112,111,112,112,111,0,112,112,110,111,112,109,110,111,112,109,110,111,112,109,0,113,113,113,113,113,113,113,113,113,113,113,0,0,0,114,115,116,114,115,116,114,115,114,115,114,115,114,114,115,114,116,114,115,116,114,115,116,116,115,116,114,115,116,114,115,116,114,115,116],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["adccode",3]],["adccode",3]],[[]],[[["i16",0]],["adccode",3]],[[["u16",0]],["adccode",3]],[[]],[[]],[[]],[[]],[[]],[[["adc0input",3],["fnonce",8]]],[[["adc1input",3],["fnonce",8]]],[[["spi",3,[["spi2",3],["enabled",3],["u16",0]]],["stream0",3,[["dma1",3]]],["stream1",3,[["dma1",3]]],["stream2",3,[["dma1",3]]],["channel1",3],["channel1",3],["usize",0]],["adc0input",3]],[[["spi",3,[["spi3",3],["enabled",3],["u16",0]]],["stream3",3,[["dma1",3]]],["stream4",3,[["dma1",3]]],["stream5",3,[["dma1",3]]],["channel2",3],["channel2",3],["usize",0]],["adc1input",3]],[[["adc0input",3]]],[[["adc1input",3]]],[[],["result",4]],[[["f32",0]],["result",4,[["adccode",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["adc0input",3]],["result",4,[["dmaerror",4]]]],[[["adc1input",3]],["result",4,[["dmaerror",4]]]],null,null,null,null,null,null,[[["gain",4]],["f32",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["gain",4]],["gain",4]],[[],["result",4,[["gain",4]]]],[[["gain",4],["formatter",3]],["result",6]],[[]],[[]],[[["programmablegainamplifier",3]],["gain",4]],[[["gain",4]],["miniconfmetadata",3]],[[]],[[]],[[],["programmablegainamplifier",3]],[[["gain",4],["string",3]],["option",4]],[[["gain",4]],["result",4]],[[["programmablegainamplifier",3],["gain",4]]],[[["gain",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["gain",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[],["result",4]],[[],["result",4]],[[["u8",0]],["result",4,[["gain",4],["tryfromprimitiveerror",3,[["gain",4]]]]]],[[],["result",4,[["gain",4],["tryfromprimitiveerror",3,[["gain",4]]]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["cputempsensor",3]],["result",4,[["f32",0],["adcerror",4]]]],[[]],[[["adcchannel",3,[["adc3",3],["temperature",3]]]],["cputempsensor",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["daccode",3]],["daccode",3]],[[["u16",0]],["daccode",3]],[[]],[[["i16",0]],["daccode",3]],[[]],[[]],[[]],[[]],[[]],[[["dac0output",3],["fnonce",8]]],[[["dac1output",3],["fnonce",8]]],[[["spi",3,[["spi4",3],["enabled",3],["u16",0]]],["stream6",3,[["dma1",3]]],["channel3",3],["usize",0]],["dac0output",3]],[[["spi",3,[["spi5",3],["enabled",3],["u16",0]]],["stream7",3,[["dma1",3]]],["channel4",3],["usize",0]],["dac1output",3]],[[["dac0output",3]]],[[["dac1output",3]]],[[],["result",4]],[[["f32",0]],["result",4,[["daccode",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["dac0output",3]],["result",4,[["dmaerror",4]]]],[[["dac1output",3]],["result",4,[["dmaerror",4]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["asmdelay",3]]],[[["asmdelay",3]]],[[]],[[]],[[["u32",0]],["asmdelay",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["inputstamper",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["pa3",6,[["alternate",3]]],["channel4",3]],["inputstamper",3]],[[["inputstamper",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["gpiopin",4]],["gpiopin",4]],[[["error",4]],["error",4]],[[["channel",4]],["channel",4]],[[["ddschannelstate",3]],["ddschannelstate",3]],[[["channelstate",3]],["channelstate",3]],[[["inputchannelstate",3]],["inputchannelstate",3]],[[["outputchannelstate",3]],["outputchannelstate",3]],[[["ddsclockconfig",3]],["ddsclockconfig",3]],[[["qspiinterface",3],["mode",4]],["result",4,[["error",4]]]],null,[[],["result",4,[["ddschannelstate",3]]]],[[],["result",4,[["channelstate",3]]]],[[],["result",4,[["inputchannelstate",3]]]],[[],["result",4,[["outputchannelstate",3]]]],[[],["result",4,[["ddsclockconfig",3]]]],null,null,[[],["option",4,[["gpiopin",4]]]],[[["gpiopin",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["channel",4],["formatter",3]],["result",6]],[[["ddschannelstate",3],["formatter",3]],["result",6]],[[["channelstate",3],["formatter",3]],["result",6]],[[["inputchannelstate",3],["formatter",3]],["result",6]],[[["outputchannelstate",3],["formatter",3]],["result",6]],[[["ddsclockconfig",3],["formatter",3]],["result",6]],null,[[]],[[]],[[["channel",4]],["gpiopin",4]],[[]],[[["qspierror",4]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["gpiopin",4]]]],[[["pounderdevices",3],["channel",4]],["result",4,[["error",4]]]],null,null,null,[[["qspi",3,[["quadspi",3]]]],["result",4,[["qspiinterface",3],["error",4]]]],[[["lm75",3,[["i2c1proxy",6],["lm75",3]]],["mcp230xx",3,[["i2c1proxy",6],["mcp23017",4]]],["spi",3,[["spi1",3],["enabled",3],["u8",0]]],["adcchannel",3,[["adc1",3],["pf11",6,[["analog",3]]]]],["adcchannel",3,[["adc2",3],["pf14",6,[["analog",3]]]]],["adcchannel",3,[["adc3",3],["pf3",6,[["analog",3]]]]],["adcchannel",3,[["adc3",3],["pf4",6,[["analog",3]]]]]],["result",4,[["pounderdevices",3],["error",4]]]],[[["gpiopin",4]],["option",4,[["gpiopin",4]]]],null,null,null,[[["gpiopin",4]],["option",4,[["gpiopin",4]]]],null,[[["qspiinterface",3],["u8",0]],["result",4,[["error",4]]]],null,[[["pounderdevices",3]],["result",4,[["error",4]]]],null,[[["pounderdevices",3],["channel",4]],["result",4,[["f32",0],["error",4]]]],[[["pounderdevices",3],["channel",4]],["result",4,[["f32",0],["error",4]]]],[[["ddschannelstate",3]],["result",4]],[[["channelstate",3]],["result",4]],[[["inputchannelstate",3]],["result",4]],[[["outputchannelstate",3]],["result",4]],[[["ddsclockconfig",3]],["result",4]],[[["pounderdevices",3],["bool",0]],["result",4,[["error",4]]]],[[["pounderdevices",3],["gpiopin",4],["level",4]],["result",4,[["error",4]]]],[[["qspiinterface",3]],["result",4,[["error",4]]]],null,[[["pounderdevices",3]],["result",4,[["error",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["qspiinterface",3],["u8",0]],["result",4,[["error",4]]]],null,null,[[["",0],["channel",4]],["result",4,[["f32",0],["error",4]]]],[[["",0],["channel",4]],["result",4,[["error",4]]]],[[["",0]],["result",4,[["error",4]]]],[[["",0],["channel",4],["f32",0]],["result",4,[["f32",0],["error",4]]]],[[["",0]],["result",4,[["error",4]]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ddsoutput",3]],["profilebuilder",3]],[[]],[[]],[[]],[[]],[[["qspiinterface",3],["highrestimere",3],["mode",4]],["ddsoutput",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["profilebuilder",3],["channel",3],["option",4,[["u32",0]]],["option",4,[["u16",0]]],["option",4,[["u32",0]]]],["profilebuilder",3]],[[["ddsoutput",3]]],[[["profilebuilder",3]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["highrestimere",3],["channel",4],["f32",0],["f32",0]]],[[]],[[]],[[]],[[]],[[["hrtim_time",3],["hrtim_master",3],["hrtim_common",3],["coreclocks",3],["hrtim",3]],["highrestimere",3]],[[["highrestimere",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["channel",4]],["result",4,[["f32",0],["error",4]]]],[[["",0],["channel",4]],["result",4,[["f32",0],["error",4]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["timestamper",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["poundertimestamptimer",3],["channel1",3],["samplingtimer",3],["pa0",6,[["alternate",3]]],["usize",0]],["timestamper",3]],[[["timestamper",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["timestamper",3],["u16",0]]],null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["udpsocketstorage",3]],["udpsocketstorage",3]],[[["tcpsocketstorage",3]],["tcpsocketstorage",3]],null,null,[[],["netstorage",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["coreperipherals",3],["peripherals",3],["systemtimer",6],["usize",0],["u32",0]]],null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["adcerror",4]],["adcerror",4]],[[["sharedadc",3],["channel",8]],["adcchannel",3,[["channel",8]]]],[[["adcerror",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",0],["adc",3,[["enabled",3]]]],["sharedadc",3]],[[["adcchannel",3]],["result",4,[["f32",0],["adcerror",4]]]],[[["adcchannel",3]],["result",4,[["u32",0],["adcerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["signalgenerator",3]]],[[["signal",4]],["signal",4]],[[["basicconfig",3]],["basicconfig",3]],[[["error",4]],["error",4]],[[["config",3]],["config",3]],[[],["basicconfig",3]],[[],["config",3]],[[],["signalgenerator",3]],[[],["result",4,[["signal",4]]]],[[],["result",4,[["basicconfig",3]]]],[[["signal",4],["formatter",3]],["result",6]],[[["basicconfig",3],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["config",3],["formatter",3]],["result",6]],[[["signalgenerator",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[["signal",4]],["miniconfmetadata",3]],[[["basicconfig",3]],["miniconfmetadata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["config",3]],["signalgenerator",3]],[[["signalgenerator",3]],["option",4,[["i16",0]]]],null,null,null,[[["signal",4],["string",3]],["option",4]],[[["basicconfig",3],["string",3]],["option",4]],[[["signal",4]],["result",4]],null,null,[[["signal",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["basicconfig",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["signal",4],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[["basicconfig",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["basicconfig",3],["f32",0],["f32",0]],["result",4,[["config",3],["error",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["signalgenerator",3],["config",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["samplingtimer",3]],["channels",3]],[[["shadowsamplingtimer",3]],["channels",3]],[[["timestamptimer",3]],["channels",3]],[[["poundertimestamptimer",3]],["channels",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["samplingtimer",3],["triggergenerator",4]]],[[["shadowsamplingtimer",3],["triggergenerator",4]]],[[["timestamptimer",3],["triggergenerator",4]]],[[["poundertimestamptimer",3],["triggergenerator",4]]],[[["samplingtimer",3]],["u32",0]],[[["shadowsamplingtimer",3]],["u16",0]],[[["timestamptimer",3]],["u32",0]],[[["poundertimestamptimer",3]],["u16",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["timer",3,[["tim2",3]]]],["samplingtimer",3]],[[["timer",3,[["tim3",3]]]],["shadowsamplingtimer",3]],[[["timer",3,[["tim5",3]]]],["timestamptimer",3]],[[["timer",3,[["tim8",3]]]],["poundertimestamptimer",3]],[[["samplingtimer",3],["prescaler",4]]],[[["shadowsamplingtimer",3],["prescaler",4]]],[[["timestamptimer",3],["prescaler",4]]],[[["poundertimestamptimer",3],["prescaler",4]]],[[["samplingtimer",3],["u32",0]]],[[["shadowsamplingtimer",3],["u16",0]]],[[["timestamptimer",3],["u32",0]]],[[["poundertimestamptimer",3],["u16",0]]],[[["samplingtimer",3],["triggersource",4],["slavemode",4]]],[[["shadowsamplingtimer",3],["triggersource",4],["slavemode",4]]],[[["timestamptimer",3],["triggersource",4],["slavemode",4]]],[[["poundertimestamptimer",3],["triggersource",4],["slavemode",4]]],[[["samplingtimer",3],["triggersource",4]]],[[["shadowsamplingtimer",3],["triggersource",4]]],[[["timestamptimer",3],["triggersource",4]]],[[["poundertimestamptimer",3],["triggersource",4]]],[[["samplingtimer",3]]],[[["shadowsamplingtimer",3]]],[[["timestamptimer",3]]],[[["poundertimestamptimer",3]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",0]],["result",4,[["prescaler",4],["tryfromprimitiveerror",3,[["prescaler",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["prescaler",4],["tryfromprimitiveerror",3,[["prescaler",4]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["samplingtimer",3]],["updateevent",3]],[[["shadowsamplingtimer",3]],["updateevent",3]],[[["timestamptimer",3]],["updateevent",3]],[[["poundertimestamptimer",3]],["updateevent",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["channel1inputcapture",3]],["usize",0]],[[["channel2inputcapture",3]],["usize",0]],[[["channel3inputcapture",3]],["usize",0]],[[["channel4inputcapture",3]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,[[["channel1inputcapture",3]],["bool",0]],[[["channel2inputcapture",3]],["bool",0]],[[["channel3inputcapture",3]],["bool",0]],[[["channel4inputcapture",3]],["bool",0]],[[["channel1inputcapture",3],["inputfilter",4]]],[[["channel2inputcapture",3],["inputfilter",4]]],[[["channel3inputcapture",3],["inputfilter",4]]],[[["channel4inputcapture",3],["inputfilter",4]]],[[["channel1inputcapture",3],["prescaler",4]]],[[["channel2inputcapture",3],["prescaler",4]]],[[["channel3inputcapture",3],["prescaler",4]]],[[["channel4inputcapture",3],["prescaler",4]]],[[["channel1inputcapture",3]]],[[["channel2inputcapture",3]]],[[["channel3inputcapture",3]]],[[["channel4inputcapture",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channel1",3],["capturesource1",4]],["channel1inputcapture",3]],[[["channel2",3],["capturesource2",4]],["channel2inputcapture",3]],[[["channel3",3],["capturesource3",4]],["channel3inputcapture",3]],[[["channel4",3],["capturesource4",4]],["channel4inputcapture",3]],[[["channel1inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["channel2inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["channel3inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["channel4inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["updateevent",3]]],[[["channel1",3]]],[[["channel1inputcapture",3]]],[[["channel2",3]]],[[["channel2inputcapture",3]]],[[["channel3",3]]],[[["channel3inputcapture",3]]],[[["channel4",3]]],[[["channel4inputcapture",3]]],[[],["updateevent",3]],[[],["channels",3]],[[["channel1",3],["u32",0]]],[[["channel2",3],["u32",0]]],[[["channel3",3],["u32",0]]],[[["channel4",3],["u32",0]]],[[["updateevent",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["channel1inputcapture",3]],["usize",0]],[[["channel2inputcapture",3]],["usize",0]],[[["channel3inputcapture",3]],["usize",0]],[[["channel4inputcapture",3]],["usizenull,null,null,null,[[["channel1inputcapture",3]],["bool",0]],[[["channel2inputcapture",3]],["bool",0]],[[["channel3inputcapture",3]],["bool",0]],[[["channel4inputcapture",3]],["bool",0]],[[["cc2s_a",4]],["cc2s_a",4]],[[["cc1s_a",4]],["cc1s_a",4]],[[["cc4s_a",4]],["cc4s_a",4]],[[["cc3s_a",4]],["cc3s_a",4]],[[["channel1inputcapture",3],["inputfilter",4]]],[[["channel2inputcapture",3],["inputfilter",4]]],[[["channel3inputcapture",3],["inputfilter",4]]],[[["channel4inputcapture",3],["inputfilter",4]]],[[["channel1inputcapture",3],["prescaler",4]]],[[["channel2inputcapture",3],["prescaler",4]]],[[["channel3inputcapture",3],["prescaler",4]]],[[["channel4inputcapture",3],["prescaler",4]]],[[["channel1inputcapture",3]]],[[["channel2inputcapture",3]]],[[["channel3inputcapture",3]]],[[["channel4inputcapture",3]]],[[["cc2s_a",4],["cc2s_a",4]],["bool",0]],[[["cc1s_a",4],["cc1s_a",4]],["bool",0]],[[["cc4s_a",4],["cc4s_a",4]],["bool",0]],[[["cc3s_a",4],["cc3s_a",4]],["bool",0]],[[["cc2s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc1s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc4s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc3s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channel1",3],["capturesource1",4]],["channel1inputcapture",3]],[[["channel2",3],["capturesource2",4]],["channel2inputcapture",3]],[[["channel3",3],["capturesource3",4]],["channel3inputcapture",3]],[[["channel4",3],["capturesource4",4]],["channel4inputcapture",3]],[[["channel1inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["channel2inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["channel3inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["channel4inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["updateevent",3]]],[[["channel1",3]]],[[["channel1inputcapture",3]]],[[["channel2",3]]],[[["channel2inputcapture",3]]],[[["channel3",3]]],[[["channel3inputcapture",3]]],[[["channel4",3]]],[[["channel4inputcapture",3]]],[[],["updateevent",3]],[[],["channels",3]],[[["channel1",3],["u16",0]]],[[["channel2",3],["u16",0]]],[[["channel3",3],["u16",0]]],[[["channel4",3],["u16",0]]],[[["updateevent",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["channel1inputcapture",3]],["usize",0]],[[["channel2inputcapture",3]],["usize",0]],[[["channel3inputcapture",3]],["usize",0]],[[["channel4inputcapture",3]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,[[["channel1inputcapture",3]],["bool",0]],[[["channel2inputcapture",3]],["bool",0]],[[["channel3inputcapture",3]],["bool",0]],[[["channel4inputcapture",3]],["bool",0]],[[["cc2s_a",4]],["cc2s_a",4]],[[["cc1s_a",4]],["cc1s_a",4]],[[["cc4s_a",4]],["cc4s_a",4]],[[["cc3s_a",4]],["cc3s_a",4]],[[["channel1inputcapture",3],["inputfilter",4]]],[[["channel2inputcapture",3],["inputfilter",4]]],[[["channel3inputcapture",3],["inputfilter",4]]],[[["channel4inputcapture",3],["inputfilter",4]]],[[["channel1inputcapture",3],["prescaler",4]]],[[["channel2inputcapture",3],["prescaler",4]]],[[["channel3inputcapture",3],["prescaler",4]]],[[["channel4inputcapture",3],["prescaler",4]]],[[["channel1inputcapture",3]]],[[["channel2inputcapture",3]]],[[["channel3inputcapture",3]]],[[["channel4inputcapture",3]]],[[["cc2s_a",4],["cc2s_a",4]],["bool",0]],[[["cc1s_a",4],["cc1s_a",4]],["bool",0]],[[["cc4s_a",4],["cc4s_a",4]],["bool",0]],[[["cc3s_a",4],["cc3s_a",4]],["bool",0]],[[["cc2s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc1s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc4s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc3s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channel1",3],["capturesource1",4]],["channel1inputcapture",3]],[[["channel2",3],["capturesource2",4]],["channel2inputcapture",3]],[[["channel3",3],["capturesource3",4]],["channel3inputcapture",3]],[[["channel4",3],["capturesource4",4]],["channel4inputcapture",3]],[[["channel1inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["channel2inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["channel3inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["channel4inputcapture",3]],["result",4,[["option",4,[["u32",0]]],["option",4,[["u32",0]]]]]],[[["updateevent",3]]],[[["channel1",3]]],[[["channel1inputcapture",3]]],[[["channel2",3]]],[[["channel2inputcapture",3]]],[[["channel3",3]]],[[["channel3inputcapture",3]]],[[["channel4",3]]],[[["channel4inputcapture",3]]],[[],["updateevent",3]],[[],["channels",3]],[[["channel1",3],["u32",0]]],[[["channel2",3],["u32",0]]],[[["channel3",3],["u32",0]]],[[["channel4",3],["u32",0]]],[[["updateevent",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["channel1inputcapture",3]],["usize",0]],[[["channel2inputcapture",3]],["usize",0]],[[["channel3inputcapture",3]],["usize",0]],[[["channel4inputcapture",3]],["usizenull,null,null,null,[[["channel1inputcapture",3]],["bool",0]],[[["channel2inputcapture",3]],["bool",0]],[[["channel3inputcapture",3]],["bool",0]],[[["channel4inputcapture",3]],["bool",0]],[[["cc2s_a",4]],["cc2s_a",4]],[[["cc1s_a",4]],["cc1s_a",4]],[[["cc4s_a",4]],["cc4s_a",4]],[[["cc3s_a",4]],["cc3s_a",4]],[[["channel1inputcapture",3],["inputfilter",4]]],[[["channel2inputcapture",3],["inputfilter",4]]],[[["channel3inputcapture",3],["inputfilter",4]]],[[["channel4inputcapture",3],["inputfilter",4]]],[[["channel1inputcapture",3],["prescaler",4]]],[[["channel2inputcapture",3],["prescaler",4]]],[[["channel3inputcapture",3],["prescaler",4]]],[[["channel4inputcapture",3],["prescaler",4]]],[[["channel1inputcapture",3]]],[[["channel2inputcapture",3]]],[[["channel3inputcapture",3]]],[[["channel4inputcapture",3]]],[[["cc2s_a",4],["cc2s_a",4]],["bool",0]],[[["cc1s_a",4],["cc1s_a",4]],["bool",0]],[[["cc4s_a",4],["cc4s_a",4]],["bool",0]],[[["cc3s_a",4],["cc3s_a",4]],["bool",0]],[[["cc2s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc1s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc4s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[["cc3s_a",4],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channel1",3],["capturesource1",4]],["channel1inputcapture",3]],[[["channel2",3],["capturesource2",4]],["channel2inputcapture",3]],[[["channel3",3],["capturesource3",4]],["channel3inputcapture",3]],[[["channel4",3],["capturesource4",4]],["channel4inputcapture",3]],[[["channel1inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["channel2inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["channel3inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["channel4inputcapture",3]],["result",4,[["option",4,[["u16",0]]],["option",4,[["u16",0]]]]]],[[["updateevent",3]]],[[["channel1",3]]],[[["channel1inputcapture",3]]],[[["channel2",3]]],[[["channel2inputcapture",3]]],[[["channel3",3]]],[[["channel3inputcapture",3]]],[[["channel4",3]]],[[["channel4inputcapture",3]]],[[],["updateevent",3]],[[],["channels",3]],[[["channel1",3],["u16",0]]],[[["channel2",3],["u16",0]]],[[["channel3",3],["u16",0]]],[[["channel4",3],["u16",0]]],[[["updateevent",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["updatestate",4]],["updatestate",4]],[[["networkusers",3],["into",8,[["u8",0]]],["u8",0]],["framegenerator",3]],null,[[["networkusers",3],["socketaddr",4]]],[[["updatestate",4],["updatestate",4]],["bool",0]],[[]],[[]],[[]],[[["str",0],["ethernetaddress",3]],["string",3]],null,[[]],[[]],[[]],null,null,null,[[["networkstack",6],["ethernetphy",6],["systemtimer",6],["str",0],["ethernetaddress",3],["ipaddr",4]],["networkusers",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["networkusers",3]],["networkstate",4]],null,null,null,null,null,null,null,null,[[["framegenerator",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["streamtarget",3]],["streamtarget",3]],[[["streamformat",4]],["streamformat",4]],[[],["streamtarget",3]],[[],["result",4,[["streamtarget",3]]]],[[["streamformat",4],["streamformat",4]],["bool",0]],[[["streamtarget",3],["formatter",3]],["result",6]],[[["streamformat",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["streamtarget",3]],["miniconfmetadata",3]],[[]],[[]],[[]],[[]],null,null,[[["datastream",3]]],[[["streamtarget",3],["string",3]],["option",4]],[[["streamtarget",3]],["result",4]],[[["datastream",3],["socketaddr",4]]],[[["networkreference",6]]],[[["streamtarget",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["usize",0],["error",4]]]],[[["streamtarget",3],["peekable",3,[["split",3,[["char",0]]]]]],["result",4,[["error",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["networkprocessor",3]]],[[]],[[["networkreference",6],["ethernetphy",6]],["networkprocessor",3]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["networkprocessor",3]],["updatestate",4]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["telemetrybuffer",3]],["telemetrybuffer",3]],null,null,null,[[],["telemetrybuffer",3]],null,null,[[["telemetrybuffer",3],["gain",4],["gain",4],["f32",0]],["telemetry",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["networkreference",6],["systemtimer",6],["str",0],["str",0],["ipaddr",4]],["telemetryclient",3,[["serialize",8]]]],[[["telemetryclient",3,[["serialize",8]]],["",0]]],[[["telemetry",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["telemetryclient",3,[["serialize",8]]]]]],"p":[[3,"AdcCode"],[3,"Adc0Input"],[3,"Adc1Input"],[4,"Gain"],[3,"ProgrammableGainAmplifier"],[3,"CpuTempSensor"],[3,"DacCode"],[3,"Dac0Output"],[3,"Dac1Output"],[3,"AsmDelay"],[3,"InputStamper"],[4,"Error"],[4,"GpioPin"],[4,"Channel"],[3,"DdsChannelState"],[3,"ChannelState"],[3,"InputChannelState"],[3,"OutputChannelState"],[3,"QspiInterface"],[3,"PounderDevices"],[3,"DdsClockConfig"],[13,"Qspi"],[8,"AttenuatorInterface"],[3,"DdsOutput"],[3,"ProfileBuilder"],[4,"Channel"],[3,"HighResTimerE"],[8,"PowerMeasurementInterface"],[3,"Timestamper"],[3,"StabilizerDevices"],[3,"NetStorage"],[3,"NetworkDevices"],[3,"PounderDevices"],[3,"UdpSocketStorage"],[3,"TcpSocketStorage"],[4,"AdcError"],[3,"AdcChannel"],[3,"SharedAdc"],[4,"Signal"],[4,"Error"],[3,"BasicConfig"],[3,"Config"],[3,"SignalGenerator"],[4,"TriggerGenerator"],[4,"SlaveMode"],[4,"Prescaler"],[4,"InputFilter"],[4,"TriggerSource"],[3,"SamplingTimer"],[3,"ShadowSamplingTimer"],[3,"TimestampTimer"],[3,"PounderTimestampTimer"],[4,"CaptureSource2"],[4,"CaptureSource1"],[4,"CaptureSource4"],[4,"CaptureSource3"],[3,"Channel1InputCapture"],[3,"Channel2InputCapture"],[3,"Channel3InputCapture"],[3,"Channel4InputCapture"],[3,"UpdateEvent"],[3,"Channels"],[3,"Channel1"],[3,"Channel2"],[3,"Channel3"],[3,"Channel4"],[4,"CaptureSource2"],[4,"CaptureSource1"],[4,"CaptureSource4"],[4,"CaptureSource3"],[3,"Channel1InputCapture"],[3,"Channel2InputCapture"],[3,"Channel3InputCapture"],[3,"Channel4InputCapture"],[3,"UpdateEvent"],[3,"Channels"],[3,"Channel1"],[3,"Channel2"],[3,"Channel3"],[3,"Channel4"],[3,"Channel1InputCapture"],[3,"Channel2InputCapture"],[3,"Channel3InputCapture"],[3,"Channel4InputCapture"],[3,"UpdateEvent"],[3,"Channels"],[3,"Channel1"],[3,"Channel2"],[3,"Channel3"],[3,"Channel4"],[4,"CaptureSource2"],[4,"CaptureSource1"],[4,"CaptureSource4"],[4,"CaptureSource3"],[3,"Channel1InputCapture"],[3,"Channel2InputCapture"],[3,"Channel3InputCapture"],[3,"Channel4InputCapture"],[3,"UpdateEvent"],[3,"Channels"],[3,"Channel1"],[3,"Channel2"],[3,"Channel3"],[3,"Channel4"],[4,"NetworkState"],[4,"UpdateState"],[3,"NetworkUsers"],[13,"SettingsChanged"],[4,"StreamFormat"],[3,"FrameGenerator"],[3,"DataStream"],[3,"StreamTarget"],[3,"NetworkProcessor"],[3,"TelemetryBuffer"],[3,"Telemetry"],[3,"TelemetryClient"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
